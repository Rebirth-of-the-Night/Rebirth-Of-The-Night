# Configuration file

##########################################################################################################
# client
#--------------------------------------------------------------------------------------------------------#
# Options related to features that only work client-side.
##########################################################################################################

client {
    # Enables the Portals creative tab.
    # Default: true
    B:portalsCreativeTab=true

    # Enables the client-sided /rporeloadclient command.
    # Default: true
    B:rporeloadclientCommand=true
}


##########################################################################################################
# endPortals
#--------------------------------------------------------------------------------------------------------#
# Options related to End portals.
##########################################################################################################

endPortals {
    # Enables vertical End portals and a variety of End portal tweaks.
    # Default: true
    B:enabled=true

    # The chance that a villager spawns with a vertical End portal frame on their head.
    # Min: 0.0
    # Max: 1.0
    # Default: 0.01
    D:frameHeadVillagerSpawnChance=0.0

    # Whether players can right click villagers with vertical End portals to put them on their heads.
    # Default: true
    B:rightClickVillagersToConvertToFrameHeads=false
}


##########################################################################################################
# misc
#--------------------------------------------------------------------------------------------------------#
# Options that don't fit into any other categories.
##########################################################################################################

misc {
    # Whether to add an item for the End gateway.
    # Default: true
    B:addEndGatewayItem=true

    # Whether to trigger advancements related to portals.
    # Default: true
    B:advancements=false

    # Enables the /rporeload command.
    # Default: true
    B:rporeloadCommand=true
}


##########################################################################################################
# netherPortals
#--------------------------------------------------------------------------------------------------------#
# Options related to Nether portals and custom portal types.
##########################################################################################################

netherPortals {
    # Whether all entities can cause portal generation when teleported through a portal.
    # Default: false
    B:allEntitiesCanCausePortalGeneration=false

    # Whether to enable colored portals.
    # Default: true
    B:coloredPortals=true

    # Whether portals should consume dyes even if they are invalid colors (as defined by the Nether portal type).
    # Default: false
    B:consumeDyesEvenIfInvalidColor=false

    # Whether portals should consume dyes even if they are the same color.
    # Default: true
    B:consumeDyesEvenIfSameColor=true

    # Whether portals should be dyeable.
    # Default: true
    B:dyeablePortals=true

    # Whether single portal blocks can be dyed by right-clicking on them.
    # This property and the above are independent of each other.
    # Default: true
    B:dyeableSinglePortalBlocks=true

    # Enables lateral Nether portals, custom portal types and a variety of Nether portal tweaks and improvements.
    # Default: true
    B:enabled=true

    # Whether to always create the "vanilla_nether_portal" Nether portal type when it doesn't exist.
    # Default: true
    B:forceCreateVanillaType=true

    # Whether receiving Nether portals should be persistent.
    # This makes mods like Netherless obsolete.
    # Default: true
    B:persistentReceivingPortals=true

    # Whether portals contribute to beacon colors.
    # Default: true
    B:portalsContributeToBeaconColors=true

    # The radius in which a suitable location to generate a portal should be searched for upon teleportation through a portal.
    # Min: 1
    # Max: 2147483647
    # Default: 16
    I:portalGenerationLocationSearchRadius=16

    # The radius in which existing portals in the destination dimension should be searched for upon teleportation through a portal.
    # Min: 1
    # Max: 2147483647
    # Default: 128
    I:portalSearchRadius=64

    # Whether user placed portals inside the frame of the same type as the portal should be replaced upon activation.
    # Leaving this false is recommended for building purposes, as it allows players to more easily create colored patterns in portals.
    # Default: false
    B:replaceUserPlacedPortalsOnActivation=false

    # Whether portal ambient sounds should be server-sided instead of client-sided as in vanilla.
    # This must be enabled for custom portal ambient sounds to work.
    # Default: true
    B:serverSidedAmbientSounds=true
}


