# Configuration file

main {
    # Max health cap for all entities, players and mobs (vanilla is 1024) [range: 2 ~ 2147483647, default: 2048]
    I:"Max Health Cap"=2048

    difficulty {
        # Defines how the area difficulty is determined when spawning a mob.
        #   AVERAGE - The average difficulty level of all nearby players.
        #   WEIGHTED_AVERAGE - Similar to average, but closer players have a greater impact on difficulty.
        #   MIN_LEVEL - The lowest difficulty level of all nearby players.
        #   MAX_LEVEL - The highest difficulty level of all nearby players.
        #   DISTANCE_FROM_SPAWN - Based on the mob's distance from spawn.
        #   DISTANCE_FROM_ORIGIN - Based on the mob's distance from the origin.
        #   DISTANCE_AND_TIME - Mix of DISTANCE_FROM_SPAWN and WEIGHTED_AVERAGE.
        #   SERVER_WIDE - Difficulty is tracked at a server level, individual player difficulty has no impact. [default: DISTANCE_AND_TIME]
        S:"Area Mode"=DISTANCE_AND_TIME

        # Change in difficulty when a player sleeps through the night. Negative numbers cause difficulty to decrease. [range: -10000.0 ~ 10000.0, default: 0.0]
        S:"Difficulty Added When Sleeping"=0

        # Allows difficulty multipliers to be set for specific dimensions. Use the dimension ID and the multiplier you want, separated by a space. For example, "-1 1.5" would make difficulty increase 1.5x faster in the Nether. [default: ]
        S:"Difficulty Dimension Multiplier" <
         >

        # Difficulty change per blight kill. Negative numbers cause difficulty to decrease. [range: -10000.0 ~ 10000.0, default: 0.0]
        S:"Difficulty Per Blight Kill"=0

        # The amount of difficulty added per unit distance from the origin/spawn, assuming "Area Mode" is set to a distance-based option. Negative numbers will decrease difficulty over distance. [range: -3.4028234663852886E38 ~ 3.4028234663852886E38, default: 0.0024999999441206455]
        S:"Difficulty Per Block"=0.00

        # Difficulty change per boss kill. Negative numbers cause difficulty to decrease. [range: -10000.0 ~ 10000.0, default: 0.0]
        S:"Difficulty Per Boss Kill"=0

        # Difficulty change per hostile mob killed. Negative numbers cause difficulty to decrease. [range: -10000.0 ~ 10000.0, default: 0.0]
        S:"Difficulty Per Kill"=0.00

        # Lets you set difficulty changes for individual mobs. Each line has 3 values separated by spaces: entity ID, standard kill change, blight kill change. For example, entering "minecraft:zombie 0.1 -20" will cause zombie kills to add 0.1 difficulty, but killing a blight zombie will remove 20 difficulty instead. [default: ]
        S:"Difficulty Per Kill By Mob" <
         >

        # Difficulty change per passive mob kill. Negative numbers cause difficulty to decrease. [range: -10000.0 ~ 10000.0, default: 0.0]
        S:"Difficulty Per Passive Kill"=0.0

        # Apply a simple change to the area difficulty in a given dimension. Use the dimension ID, then a space, then an operator (+-*/) followed by a number. For example, "-1 *2.0" would make difficulty 2x higher in the Nether. "1 +20" would increase difficulty by 20 in The End [default: ]
        S:"Dimension Value Factor" <
         >

        # Players listed here will be "exempt" from the difficulty system. Exempt players are still part of difficulty calculations, but are treated as having zero difficulty. [default: ]
        S:"Exempt Players" <
         >

        # Allows difficulty to be set via Game Stages. Each line should consist of the stage key, followed by a space and the difficulty value (integers only). Example: "my_stage_key 100" [default: ]
        S:"Game Stages" <
         >

        # Adds extra difficulty per additional nearby player. So area difficulty will be multiplied by: 1 + group_bonus * (players_in_area - 1) [range: -10.0 ~ 10.0, default: 0.05000000074505806]
        S:"Group Area Bonus"=0.05000000074505806

        # Difficulty added per second is multiplied by this if the player is not moving. [range: -100.0 ~ 100.0, default: 0.699999988079071]
        S:"Idle Multiplier"=0.0

        # The amount difficulty changes each second. In Difficult Life, the option was named per tick, but was actually applied each second. Negative numbers will decrease difficulty over time. [range: -10000.0 ~ 10000.0, default: 0.0011573999654501677]
        S:"Increase Per Second"=0.0

        # The difficulty a player loses on death. Negative numbers cause the player to gain difficulty. [range: -10000.0 ~ 10000.0, default: 0.0]
        S:"Lost On Death"=0.0

        # The maximum difficulty level that can be reached. [range: 0.0 ~ 3.4028234663852886E38, default: 250.0]
        S:"Max Value"=200.0

        # The minimum difficulty value. This can be different from the starting value. [range: 0.0 ~ 3.4028234663852886E38, default: 0.0]
        S:"Min Value"=0.0

        # Allows players' difficulty to be reset at certain frequencies.
        #   NONE - Do not do regular resets.  Weekdays (SUNDAY, MONDAY, etc.) - Reset on this day of the week. If the player does not play on this day, they will be reset the next time they log in.
        #   DAILY - Reset if the last time the player logged in was a different day.  MONTHLY - Reset if the last time the player logged in was a different month (everyone resets on the first of the month). [default: NONE]
        S:"Reset Time"=NONE

        # The distance from a newly spawned mob to search for players to determine its difficulty level. Set to 0 for unlimited range. [range: 0 ~ 32767, default: 256]
        I:"Search Radius"=256

        # The starting difficulty level for new worlds or players joining for the first time. [range: 0.0 ~ 3.4028234663852886E38, default: 0.0]
        S:"Starting Value"=0.0

        lunar_phases {
            # Difficulty multipliers for each lunar phase. There must be exactly 8 values. The first is full moon, the fifth is new moon. [default: [1.5], [1.3], [1.2], [1.0], [0.8], [1.0], [1.2], [1.3]]
            S:"Lunar Phase Multipliers" <
                1.5
                1.3
                1.2
                1.0
                0.8
                1.0
                1.2
                1.3
             >

            # Enable lunar phase difficulty multipliers. Difficulty will receive a multiplier based on the phase of the moon.
            B:"Lunar Phases Enabled"=false
        }

    }

    client {
        # The colors for each row of absorption hearts. Works the same way as "Heart Colors" [default: [bf0000], [e66000], [e69900], [e6d300], [99e600], [4ce600], [00e699], [00e6e6], [0099e6], [0000e6], [9900e6], [d580ff], [8c8c8c], [e6e6e6]]
        S:"Absorption Heart Colors" <
            bf0000
            e66000
            e69900
            e6d300
            99e600
            4ce600
            00e699
            00e6e6
            0099e6
            0000e6
            9900e6
            d580ff
            8c8c8c
            e6e6e6
         >

        # Determines how absorption hearts should be rendered.
        # Valid values: [SHIELD, GOLD_OUTLINE, VANILLA] [default: SHIELD]
        S:"Absorption Heart Style"=SHIELD

        # Determines the color of the text next to your hearts. GREEN_TO_RED displays green at full health, and moves to red as you lose health (does not work with absorption). WHITE will just be good old fashioned white text. Set to PSYCHEDELIC if you want to taste the rainbow. SOLID is a fixed color
        # Valid values: [GREEN_TO_RED, WHITE, PSYCHEDELIC, SOLID] [default: WHITE]
        S:"Absorption Text Color"=WHITE

        # Determines what the text next to your hearts will display. DISABLED will display nothing, ROWS will display the number of remaining rows that have health left, and HEALTH_AND_MAX will display your actual health and max health values (for absorption, there is no max value). HEALTH_ONLY displays just the current amount.
        # Valid values: [DISABLED, ROWS, HEALTH_AND_MAX, HEALTH_ONLY] [default: DISABLED]
        S:"Absorption Text Style"=HEALTH_AND_MAX

        # If true, heart colors will 'loop around' to the first color after going through the entire list. Set false to have every row after the last have the same color.
        B:"Color Looping"=true

        # Replaces vanilla heart rendering (regular and absorption)
        B:"Custom Heart Rendering"=true

        # The time (in ticks) to show the difficulty meter whenever it pops up. [range: 0 ~ 2147483647, default: 160]
        I:"Difficulty Meter Display Time"=160

        # Determines the color of the text next to your hearts. GREEN_TO_RED displays green at full health, and moves to red as you lose health (does not work with absorption). WHITE will just be good old fashioned white text. Set to PSYCHEDELIC if you want to taste the rainbow. SOLID is a fixed color
        # Valid values: [GREEN_TO_RED, WHITE, PSYCHEDELIC, SOLID] [default: GREEN_TO_RED]
        S:"Health Text Color"=GREEN_TO_RED

        # Text color is color style is SOLID [default: FFFFFF]
        S:"Health Text Solid Color"=FFFFFF

        # Determines what the text next to your hearts will display. DISABLED will display nothing, ROWS will display the number of remaining rows that have health left, and HEALTH_AND_MAX will display your actual health and max health values (for absorption, there is no max value). HEALTH_ONLY displays just the current amount.
        # Valid values: [DISABLED, ROWS, HEALTH_AND_MAX, HEALTH_ONLY] [default: ROWS]
        S:"Health Text Style"=ROWS

        # The colors for each additional row of hearts. The colors will loop back around to the beginning if necessary. Use hexadecimal to specify colors (like HTML color codes). [default: [bf0000], [e66000], [e69900], [e6d300], [99e600], [4ce600], [00e699], [00e6e6], [0099e6], [0000e6], [9900e6], [d580ff], [8c8c8c], [e6e6e6]]
        S:"Heart Colors" <
            bf0000
            e66000
            e69900
            e6d300
            99e600
            4ce600
            00e699
            00e6e6
            0099e6
            0000e6
            9900e6
            d580ff
            8c8c8c
            e6e6e6
         >

        # The color of the last heart outline (default value). Due to an oversight, this ended up as a decimal number. Oops. [range: 0 ~ 16777215, default: 16777215]
        I:"Last Heart Outline Color"=16777215

        # Outline your highest (max health) heart in a different color. This makes seeing your max health a little bit easier.
        B:"Last Heart Outline Enabled"=true

        # Sets position of the difficulty meter. Negative numbers anchor it to the right side of the screen. [range: -2147483648 ~ 2147483647, default: 5]
        I:"Position X"=5

        # Sets position of the difficulty meter. Negative numbers anchor it to the bottom of the screen. [range: -2147483648 ~ 2147483647, default: -30]
        I:"Position Y"=-30

        # Show the difficulty meter. Usually, it is display for a few seconds occasionally. If false, it is never shown.
        B:"Render Difficulty Meter"=false

        # Render the difficulty meter at all times. If false, it displays occasionally.
        B:"Render Difficulty Meter Always"=false

        # If true, replaces the vanilla hearts with Scaling Health's hearts. Otherwise, regular vanilla hearts are rendered first, then custom hearts are used for extra health.
        B:"Replace Vanilla Heart Row With Custom"=true

        # If true, the difficulty a mob is spawned with will be "consumed" when given health/damage bonuses and potion effects (as in older versions).
        B:"Stats Consume Difficulty"=false

        # Offset the position of the absorption text [range: -2147483648 ~ 2147483647, default: 0]
        I:"Text Offset Absorption X"=0

        # Offset the position of the absorption text [range: -2147483648 ~ 2147483647, default: 0]
        I:"Text Offset Absorption Y"=0

        # Offset the position of health text. [range: -2147483648 ~ 2147483647, default: 0]
        I:"Text Offset X"=0

        # Offset the position of health text. [range: -2147483648 ~ 2147483647, default: 0]
        I:"Text Offset Y"=0

        # If difficulty is set to change when the player sleeps, they will be warned when they get in bed.
        B:"Warn When Sleeping"=false

        # If not empty, this replaces the default 'warn when sleeping' message. Leaving this empty will pull the usual message from the lang file. [default: ]
        S:"Warn When Sleeping - Message"=§cBeware... The mobs can sense you sleeping and will slightly grow in power if you skip the night...

        wit {
            # If true, additional information on entities will be added to WIT. Disable this if another mod is using the "wit" mod ID and causing the game to crash as a result.
            B:"Enable WIT Support"=true
        }

    }

    items {
        # If enabled, heart crystals drop shards instead of full containers.
        B:"Drop Shards Instead of Containers"=true

        # If true, the healing from bandages and medkits will fire a standard healing event, allowing other mods to execute additional code or cancel the healing altogether. Disable if needed.
        B:"Healing Items Fire Healing Event"=true

        # The chance of a hostile mob dropping a heart container when killed. [range: 0.0 ~ 1.0, default: 0.009999999776482582]
        S:"Heart Drop Chance"=0

        # The chance of a passive mob (animals) dropping a heart container when killed. [range: 0.0 ~ 1.0, default: 0.0010000000474974513]
        S:"Heart Drop Chance (Passive)"=0

        # If true, the healing from heart containers will fire a standard healing event, allowing other mods to execute additional code or cancel the healing altogether. Disable if needed.
        B:"Heart Healing Event"=true

        # The number of experience levels required to use a heart container. [range: 0 ~ 2147483647, default: 3]
        I:"Heart XP Level Cost"=10

        # The maximum number of heart containers that a blight will drop when killed. [range: 0 ~ 64, default: 2]
        I:"Hearts Dropped by Blight Max"=16

        # The minimum number of heart containers that a blight will drop when killed. [range: 0 ~ 64, default: 0]
        I:"Hearts Dropped by Blight Min"=9

        # The maximum number of heart containers that a boss will drop when killed. [range: 0 ~ 64, default: 6]
        I:"Hearts Dropped by Boss Max"=0

        # The minimum number of heart containers that a boss will drop when killed. [range: 0 ~ 64, default: 3]
        I:"Hearts Dropped by Boss Min"=0

        # The amount of extra health restored when using a heart container. This applies whether or not hearts increase max health. [range: 0 ~ 2147483647, default: 4]
        I:"Hearts Health Restored"=4

        # If set to false, hearts will no longer increase the player's maximum health, but can still be used for healing.
        B:"Hearts Increase Max Health"=true

        cursed_heart {
            # The amount of difficulty added/removed when using a cursed heart. [range: -3.4028234663852886E38 ~ 3.4028234663852886E38, default: 10.0]
            S:"Difficulty Change"=10.0
        }

        enchanted_heart {
            # The amount of difficulty added/removed when using an enchanted heart. [range: -3.4028234663852886E38 ~ 3.4028234663852886E38, default: -10.0]
            S:"Difficulty Change"=-10.0
        }

    }

    mob {
        # Mobs listed here will not receive extra attack damage, but can still get extra health or become blights [default: ]
        S:"Damage Bonus Blacklist" <
         >

        # A multiplier for extra attack strength all mobs will receive. Set to 0 to disable extra attack strength. [range: 0.0 ~ 3.4028234663852886E38, default: 0.10000000149011612]
        S:"Damage Modifier"=0.0

        # The maximum extra attack damage a mob can receive. Zero means unlimited. [range: 0.0 ~ 1000.0, default: 10.0]
        S:"Max Damage Bonus"=25.0

        # The chance that an extra potion effect will be applied to any hostile mob. Note that this effect requires the mob to have a certain amount of "difficulty" left after it has been given extra health and damage. So entering 1 won't guarantee potion effects. [range: 0.0 ~ 1.0, default: 0.375]
        S:"Potion Chance (Hostiles)"=0.275

        # The chance that an extra potion effect will be applied to any passive mob. Note that this effect requires the mob to have a certain amount of "difficulty" left after it has been given extra health and damage. So entering 1 won't guarantee potion effects. [range: 0.0 ~ 1.0, default: 0.02500000037252903]
        S:"Potion Chance (Passives)"=0.0

        # Additional XP (as percentage) per point of difficulty. For example, if this is 0.01, a mob will drop 2x (+1.0x) XP at 100 difficulty and 3x (+2.0x) at 200 [range: 0.0 ~ 1.0, default: 0.009999999776482582]
        S:"XP Boost"=0

        blights {
            # If true, every mob that can be a blight will be one 100% of the time.
            B:"All Mobs Are Blights"=false

            # If true, the list is a whitelist. Otherwise it is a blacklist. [default: false]
            B:"Always Blight IsWhitelist"=false

            # If "All Mobs Are Blights" is enabled, this list can be used to filter mobs. [default: ]
            S:"Always Blight List" <
             >

            # The amplifier level on the speed potion effect applied to blights. Set -1 to disable, 0 is level 1. [range: -1 ~ 99, default: 4]
            I:"Amplifier Speed"=3

            # The amplifier level on the strength potion effect applied to blights. Set -1 to disable, 0 is level 1. [range: -1 ~ 99, default: 1]
            I:"Amplifier Strength"=2

            # Mobs listed here will never become blights, but can still receive extra health. There is also a blacklist for extra health. [default: [minecraft:wither], [minecraft:villager], [minecolonies:citizen]]
            S:Blacklist <
                minecraft:wither
                minecraft:ender_dragon
                minecraft:villager
                minecolonies:citizen
             >

            # If enabled, no bosses can become blights. If you need more control, use the Blacklist instead.
            B:"Blacklist All Bosses"=true

            # If enabled, no hostile mobs can become blights.
            B:"Blacklist All Hostiles"=false

            # If enabled, no passive (peaceful) mobs can become blights.
            B:"Blacklist All Passives"=true

            # Determines the chance of a mob spawning as a blight. Formula is "blightChanceMulti * currentDifficulty / maxDifficulty". Setting to 0 will disable blights. Setting to 1 will guarantee blights at max difficulty. [range: 0.0 ~ 3.4028234663852886E38, default: 0.0625]
            S:"Blight Chance Multiplier"=0.005

            # When an entity spawns as a blight, their calculated difficulty is multiplied by this. Higher numbers mean more health and damage! [range: 1.0 ~ 3.4028234663852886E38, default: 3.0]
            S:"Blight Difficulty Multiplier"=2.0

            # Should blights have the fire resistance potion effect?
            B:"Fire Resist"=true

            # Set blight fires to "ride" on the blight they belong to. In some cases, this might cause the fire to follow the blight more smoothly, but doesn't seem to help in most cases. Leaving off is recommended.
            B:"Fire Rides Blights"=false

            # If true, blights will have a fixed chance of spawning, regardless of difficulty. Set the chance in "Blight Chance Multiplier".
            B:"Fixed Chance"=true

            # If true, blights will not take suffocation (inside a block) damage
            B:"Immune To Suffocation"=true

            # Should blights have the invisibility potion effect?
            B:Invisibility=false

            # Let all players know when a blight dies in chat.
            B:"Notify Players on Death"=false

            # The duration (in ticks) of the potion effects applied to blights. The effects are refreshed frequently, so this value doesn't matter in most cases... except for the lingering potion effects left by blight creepers. Set to -1 for infinite time. Default is 5 minutes. [range: -1 ~ 2147483647, default: 6000]
            I:"Potion Duration"=6000

            # Blight creepers will be supercharged, like when they are struck by lightning.
            B:"Supercharge Creepers"=true

            # The multiplier applied to the amount of XP dropped when a blight is killed. [range: 0.0 ~ 1000.0, default: 10.0]
            S:"XP Multiplier"=10.0

            equipment {
                # The chance of an additional armor piece being given. Every blight receives a helmet, then has this probability of receiving a chestplate. If it gets a chestplate, it has this probability of receiving leggings, etc. [range: 0.0 ~ 1.0, default: 0.5]
                S:"Armor Piece Chance"=0.0

                # The chance that a blight will receive equipment in their hands (swords, etc.) They only get a chance at an offhand item if a main hand item is selected. Depending on the mods you have installed, there may not be any hand equipment to chose from. [range: 0.0 ~ 1.0, default: 0.5]
                S:"Hand Piece Chance"=0.0

                # The highest commonly-occuring equipment tier for blights. This goes from 0 to 4 inclusive. For armor, the defaults (tiers 0 to 4) are leather, gold, chainmail, iron, and diamond. [range: 0 ~ 4, default: 1]
                I:"Highest Common Tier"=0

                # The chance that a higher tier will be selected for a blight. A common tier is chosen first, then it has a few chances to increase. [range: 0.0 ~ 1.0, default: 0.095]
                S:"Tier Up Chance"=0.00
            }

        }

        health {
            # Allow boss mobs (dragon, wither, etc.) to spawn with extra health based on difficulty.
            B:"Allow Boss Extra Health"=false

            # Allow hostile mobs (monsters) to spawn with extra health based on difficulty.
            B:"Allow Hostile Extra Health"=false

            # Allow peaceful/passive mobs (such as animals) to spawn with extra health based on difficulty.
            B:"Allow Peaceful Extra Health"=false

            # The minimum extra health a hostile mob will have per point of difficulty, before the scaling mode is accounted for. [range: 0.0 ~ 3.4028234663852886E38, default: 0.5]
            S:"Base Health Modifier"=0.0

            # The minimum extra health a peaceful mob will have per point of difficulty, before the scaling mode is accounted for. Same as "Base Health Modifier", but for peaceful/passive mobs! [range: 0.0 ~ 3.4028234663852886E38, default: 0.25]
            S:"Base Health Modifier Peaceful"=0.00

            # Mobs listed here will never receive extra health, and will not become blights. There is also a separate blacklist for blights, if you still want the mob in question to have extra health. [default: ]
            S:Blacklist <
             >

            # Mobs will not gain extra health or become blights in these dimensions. Integers only, any other entries will be silently ignored. [default: ]
            S:"Dimension Blacklist" <
             >

            # Describes how extra mob health is applied. This will not change the health of mobs that already exist!
            #   ADD - Adds a value based on difficulty to the mob's health, ignoring the mob's default health.
            #   MULTI - Multiplies the mob's health instead of adding a flat value. For example, endermen
            #     will always have around twice the health of zombies with this option.
            #   MULTI_HALF - Multiplies the mob's health, but the value is reduced for higher-health mobs.
            #   MULTI_QUARTER - Same as MULTI_HALF, but the scaling factor is even less. [default: MULTI_QUARTER]
            S:"Scaling Mode"=MULTI_QUARTER
        }

        ##########################################################################################################
        # potion
        #--------------------------------------------------------------------------------------------------------#
        # Potion effects applied to non-blights.
        ##########################################################################################################

        potion {
            # The potion effects that mobs can spawn with. You can add effects from other mods if you want to, or remove existing ones. Each line has 3 values separated by commas: the potion ID, the minimum difficulty (higher = less common), and the level (1 = level I, 2 = level II, etc). [default: [minecraft:strength,30,1], [minecraft:speed,10,1], [minecraft:speed,50,2], [minecraft:fire_resistance,10,1], [minecraft:invisibility,25,1], [minecraft:resistance,30,1]]
            S:"Mob Potions" <
                minecraft:strength,30,1
                minecraft:speed,10,1
                minecraft:speed,50,2
                minecraft:fire_resistance,10,1
                minecraft:resistance,30,1
             >
        }

    }

    fake_players {
        # If enabled, fake players will be able to get heart container drops when killing mobs. Disabling should prevent at least some mob grinders from getting heart drops.
        B:"Can Generate Hearts"=false
    }

    player {

        regen {
            # The amount of time (in ticks) between each bonus regen tick (a half heart being healed). [range: 0 ~ 2147483647, default: 100]
            I:Delay=1200

            # The amount of time (in ticks) after being hurt before bonus regen activates. [range: 0 ~ 2147483647, default: 400]
            I:"Delay (Initial)"=600

            # Enable bonus health regen for players. Vanilla regen is not changed in any way, this just adds extra healing! Vanilla regen can be disabled with the naturalRegeneration gamerule.
            B:"Enable Bonus Regen"=true

            # The food consumption for each bonus regen tick. [range: 0.0 ~ 1.0, default: 0.10000000149011612]
            S:"Exhaustion Added"=0.10000000149011612

            # The maximum food level at which bonus regen will be active (vanilla max food is 20). [range: 0 ~ 2147483647, default: 2147483647]
            I:"Food Max"=2147483647

            # The minimum food level at which bonus regen will be active (vanilla max food is 20). [range: 0 ~ 2147483647, default: 10]
            I:"Food Min"=10

            # Bonus regen will stop when players have this much health or more. [range: 0 ~ 2147483647, default: 2147483647]
            I:"Health Max"=2147483647

            # Bonus regen will stop when players have this much health or less. [range: 0 ~ 2147483647, default: 0]
            I:"Health Min"=18

            # If enabled, regen will be proportional to max health
            B:"Scale With Max Health"=false
        }

        health {
            # Allow Scaling Health to modify the player's health. Scaling Health's changes are often compatible with other mods, assuming they use Minecraft's attribute system. If set to false, heart containers and the '/scalinghealth health' command will not work.
            B:"Allow Modified Health"=true

            # The amount of health (in half hearts) a player will lose each time they die. Set to a negative number to cause players to gain health instead. [range: -2147483648 ~ 2147483647, default: 0]
            I:"Health Lost On Death"=0

            # The maximum amount of health (in half hearts) a player can achieve with heart containers alone. Zero means unlimited. NOTE: Players must still obey Minecraft's max health cap. You can change that value with the "Max Health Cap" setting under the main category. [range: 0 ~ 2147483647, default: 0]
            I:"Max Health"=60

            # The minimum amount of health (in half hearts) a player can have. This is different from starting health. [range: 2 ~ 2147483647, default: 2]
            I:"Min Health"=2

            # Allows players' health to be reset at certain frequencies.
            #   NONE - Do not do regular resets.  Weekdays (SUNDAY, MONDAY, etc.) - Reset on this day of the week. If the player does not play on this day, they will be reset the next time they log in.
            #   DAILY - Reset if the last time the player logged in was a different day.  MONTHLY - Reset if the last time the player logged in was a different month (everyone resets on the first of the month). [default: NONE]
            S:"Reset Time"=NONE

            # Allows the player's health to be set according to XP level. Each line will have the level, then the max health after a space. For example, "10 30" would give the player 15 hearts (30 health) at level 10. Note this is the "target health" for a player of this XP level. The actual bonus heart will be the value you enter minus starting health. The highest level the player has passed will be selected. The health bonus will stack with heart containers (just remember heart containers consume XP by default). [default: ]
            S:"Set Health By XP" <
             >

            # The amount of health (in half hearts) players will start with when first joining the world. Vanilla is 20. [range: 2 ~ 2147483647, default: 20]
            I:"Starting Health"=20
        }

        damage {
            # Also apply damage scaling to hostile mobs when they take damage. [default: false]
            B:"Affect Hostile Mobs"=false

            # Also apply damage scaling to passive mobs when they take damage. [default: false]
            B:"Affect Passive Mobs"=false

            # How much each point of difficulty affects damage scaling. With the default value of 0.04 (1/25th) and max difficulty of 250, that's up to a 10x multiplier on added damage. So player's would take 11x damage at max difficulty, if the source scale is set to 1.0. [range: 0.0 ~ 1000.0, default: 0.04]
            S:"Difficulty Weight"=0.00

            # If the damage source is not in the "Scale By Source" list, this value is used instead. [range: -3.4028235E38 ~ 3.4028235E38, default: 0.0]
            S:"Generic Scale"=0.0

            # Set damage scaling by damage source. All vanilla sources should be included, but set to no scaling. Mod sources can be added too, you'll just need the damage type string. The number represents how steeply the damage scales. 0 means no scaling (vanilla), 1 means it will be proportional to difficulty/max health (whichever you set). The scaling number can be anything, although I recommend a non-negative number. [default: [inFire 0.0], [lightningBolt 0.0], [onFire 0.0], [lava 0.0], [hotFloor 0.0], [inWall 0.0], [cramming 0.0], [drown 0.0], [starve 0.0], [cactus 0.0], [fall 0.0], [flyIntoWall 0.0], [outOfWorld 0.0], [generic 0.0], [magic 0.0], [wither 0.0], [anvil 0.0], [fallingBlock 0.0], [dragonBreath 0.0], [fireworks 0.0]]
            S:"Scale By Source" <
             >

            # Set what value we scale against. MAX_HEALTH scales to player's max health MINUS starting health. Defaults to MAX_HEALTH if an invalid string is entered.
            # Valid values: [MAX_HEALTH, PLAYER_DIFFICULTY, AREA_DIFFICULTY] [default: MAX_HEALTH]
            S:"Scaling Mode"=PLAYER_DIFFICULTY
        }

    }

    debug {
        # Master switch for the other debug configs.
        B:"Debug Mode"=false

        # Draws information related to the mod on-screen, including health modifiers, difficulty data, and more. This is intended for testing purposes only, not normal gameplay.
        B:"Debug Overlay"=false

        # If debug mode is on, this will log details of damage done to players.
        B:"Log Player Damage"=false

        # If debug mode is on, this will log details on mob spawns. This may slow down your game.
        B:"Log Spawns"=false
    }

    pets {
        # The number of ticks between regen ticks on pets. Set to 0 to disable pet regen. [range: 0 ~ 72000, default: 600]
        I:"Regen Delay"=600
    }

    network {
        # The number of ticks between update packets. Smaller numbers mean more packets (and more bandwidth and processing power used), but also less client-server desynconfig. [range: 1 ~ 1200, default: 20]
        I:"Packet Delay"=20
    }

    world {

        heart_crystal_ore {
            # The maximum number of extra veins created by distance from spawn. [range: 0.0 ~ 1000.0, default: 5.0]
            S:"Extra Vein Cap"=0

            # The number of extra possible veins per chunk away from spawn. The default value will reach the cap at 50,000 blocks from spawn. [range: 0.0 ~ 1.0, default: 9.6E-4]
            S:"Extra Vein Rate"=0

            # The highest y-level the ore can be found at. Must be greater than Min Height [range: 0 ~ 255, default: 45]
            I:"Max Height"=45

            # The lowest y-level the ore can be found at. Must be less than Max Height [range: 0 ~ 255, default: 5]
            I:"Min Height"=5

            # The base number of heart crystal shards dropped by the ore. Fortune III can double this value at most. [range: 1 ~ 64, default: 1]
            I:"Quantity Dropped"=1

            # The size of each vein. [range: 0 ~ 10000, default: 6]
            I:"Vein Size"=6

            # The number of veins per chunk. The fractional part is a probability of an extra vein in each chunk. [range: 0.0 ~ 10000.0, default: 0.50857145]
            S:"Veins Per Chunk"=0
        }

    }

    compatibility {
        # Override the Morpheus new day handler to fire sleep events. Without this, difficulty will not increase when sleeping. [default: true]
        B:"Morpheus Support"=true
    }

    holidays {

        ##########################################################################################################
        # april_trickery
        #--------------------------------------------------------------------------------------------------------#
        # April Fools event options.
        ##########################################################################################################

        april_trickery {
            # May cause silly things to happen on certain day(s) in April. [default: true]
            B:Enabled=true

            # I need this in my life 24/7! [default: false]
            B:"Forced On"=false
        }

    }

}


