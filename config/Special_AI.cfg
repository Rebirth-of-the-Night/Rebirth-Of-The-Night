# Configuration file

##########################################################################################################
# _general
#--------------------------------------------------------------------------------------------------------#
# General and/or miscellaneous options.
##########################################################################################################

_general {
    # If true, the mod will start up in debug mode.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=false ]
    B:_debug_mode=false

    # Chance for an entity on the depacify list to spawn aggressive, instead of just neutral.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.0 ]
    D:depacify_aggressive_chance=1.0

    # List of passive mobs (by entity id) that are made "neutral" like wolves.
    # You may put a tilde (~) in front of any entity id to make it specific; specific entity ids
    # will not count any entities extending (i.e., based on) the specified entity.
    # Additional number after the entity id is the chance (0.0 to 1.0) for entities of that type to spawn with the AI.
    # May or may not work on mod mobs.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:chicken 1.0, minecraft:cow 1.0, minecraft:pig 1.0, minecraft:sheep 1.0, minecraft:rabbit 1.0, minecraft:squid 1.0 } ]
    S:depacify_list <
        minecraft:skeleton_horse 1.0
        minecraft:zombie_horse 1.0
        specialmobs:endercreeper 1.0
        netherex:salamander 0.5
        betteranimalsplus:zotzpyre 1.0
        coroutil:bat_smart 1.0
        betteranimalsplus:shark 0.4
        mod_lavacow:pingu 1.0
     >

    # If true, passive mobs will seek out and eat the items used to breed them laying on the floor.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:eat_breeding_items=true

    # If true, when mobs eat breeding items off the floor, they will regain health like wolves.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:eating_heals=true
}


##########################################################################################################
# door_breaking
#--------------------------------------------------------------------------------------------------------#
# Options to customize monsters' door-breaking behavior.
##########################################################################################################

door_breaking {
    # If true, mobs will destroy doors that are blocking their path.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:_enabled=true

    # The block breaking speed multiplier for mobs, relative to the player's block breaking speed.
    #    >> Float:[ Range={ 0.0, Infinity }, Default=0.33 ]
    D:break_speed=0.33

    # If true, broken blocks will leave item drops.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:leave_drops=true

    # If true, creepers will be very mad about not having arms to break things with, and resort to what they know best...
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:mad_creepers=false

    # List of mobs that can gain door-breaking AI (note that the entity must have task-based AI enabled).
    # The number after each mob is the chance for that mob type to get the AI, from 0 to 1.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:zombie 1.0, minecraft:creeper 1.0, minecraft:zombie_pigman 1.0 } ]
    S:mob_list <
        minecraft:zombie 1.0
        minecraft:zombie_pigman 1.0
        minecraft:zombie_villager 1.0
        minecraft:husk 1.0
        minecraft:evocation_illager 1.0
        minecraft:vindication_illager 1.0
        minecraft:illusion_illager 1.0
        specialmobs:hungryzombie 1.0
        specialmobs:brutezombie 1.0
        specialmobs:plaguezombie 1.0
        specialmobs:fishingzombie 1.0
        specialmobs:firezombie 1.0
        specialmobs:giantzombie 1.0
        quark:dweller 1.0
        quark:wraith 1.0
        charm:spectre 1.0
        primitivemobs:goblin 1.0
        primitivemobs:haunted_tool 1.0
        primitivemobs:skeleton_warrior 1.0
        specialmobs:brutewitherskeleton 1.0
        specialmobs:gatlingwitherskeleton 1.0
        specialmobs:giantwitherskeleton 1.0
        specialmobs:knightwitherskeleton 1.0
        specialmobs:ninjawitherskeleton 1.0
        specialmobs:sniperwitherskeleton 1.0
        specialmobs:spitfirewitherskeleton 1.0
        specialmobs:giantskeleton 1.0
        specialmobs:bruteskeleton 1.0
        specialmobs:witchspider 1.0
        specialmobs:giantspider 1.0
        mowziesmobs:barakoan_barakoana 1.0
        mowziesmobs:barakoana 1.0
        mowziesmobs:barakoaya 1.0
        zombie_players:zombie_player 1.0
        rats:plague_beast 1.0
        netherex:wight 1.0
        mod_lavacow:zombiefrozen 1.0
        mod_lavacow:zombiemushroom 1.0
        twilightforest:minotaur 1.0
        twilightforest:minoshroom 1.0
        twilightforest:yeti 1.0
        twilightforest:snow_guardian 1.0
        twilightforest:troll 1.0
        twilightforest:kobold 1.0
        twilightforest:redcap_sapper 1.0
        specialmobs:knightskeleton 1.0
        twilightforest:skeleton_druid 1.0
        twilightforest:redcap 1.0
        iceandfire:if_troll 1.0
        aether_legacy:cockatrice 1.0
     >

    # If true, mobs will only break doors while they are chasing an attack target.
    # Setting this to false typically leads to mobs smashing into your house to get to blocks they are targeting
    # as part of an idle griefing or fiddling behavior, such as torches or chests.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:requires_target=false

    # If true, mobs will only target blocks they have the tools to harvest.
    # For example, they will only break iron doors with a pickaxe.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:requires_tools=true

    # Door blocks that can be broken by mobs chasing you.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ long_list_here } ]
    S:target_blocks <
        minecraft:wooden_door
        minecraft:iron_door
        minecraft:trapdoor
        minecraft:fence_gate
        minecraft:iron_trapdoor
        minecraft:spruce_fence_gate
        minecraft:birch_fence_gate
        minecraft:jungle_fence_gate
        minecraft:dark_oak_fence_gate
        minecraft:acacia_fence_gate
        minecraft:spruce_door
        minecraft:birch_door
        minecraft:jungle_door
        minecraft:acacia_door
        minecraft:dark_oak_door
        biomesoplenty:sacred_oak_fence_gate
        biomesoplenty:cherry_fence_gate
        biomesoplenty:umbran_fence_gate
        biomesoplenty:fir_fence_gate
        biomesoplenty:ethereal_fence_gate
        biomesoplenty:magic_fence_gate
        biomesoplenty:mangrove_fence_gate
        biomesoplenty:palm_fence_gate
        biomesoplenty:redwood_fence_gate
        biomesoplenty:willow_fence_gate
        biomesoplenty:pine_fence_gate
        biomesoplenty:hellbark_fence_gate
        biomesoplenty:jacaranda_fence_gate
        biomesoplenty:mahogany_fence_gate
        biomesoplenty:ebony_fence_gate
        biomesoplenty:eucalyptus_fence_gate
        biomesoplenty:sacred_oak_door_block
        biomesoplenty:cherry_door_block
        biomesoplenty:umbran_door_block
        biomesoplenty:fir_door_block
        biomesoplenty:ethereal_door_block
        biomesoplenty:magic_door_block
        biomesoplenty:mangrove_door_block
        biomesoplenty:palm_door_block
        biomesoplenty:redwood_door_block
        biomesoplenty:willow_door_block
        biomesoplenty:pine_door_block
        biomesoplenty:hellbark_door_block
        biomesoplenty:jacaranda_door_block
        biomesoplenty:mahogany_door_block
        biomesoplenty:ebony_door_block
        biomesoplenty:eucalyptus_door_block
        betternether:stalagnate_planks_gate
        betternether:reeds_gate
        betternether:bone_reed_door
        betternether:bone_cincinnasite_door
        rustic:fence_gate_olive
        rustic:fence_gate_ironwood
        rustic:olive_door
        rustic:ironwood_door
        twilightforest:twilight_oak_door
        twilightforest:twilight_oak_trapdoor
        twilightforest:twilight_oak_gate
        twilightforest:canopy_door
        twilightforest:canopy_trapdoor
        twilightforest:canopy_gate
        twilightforest:mangrove_door
        twilightforest:mangrove_trapdoor
        twilightforest:mangrove_gate
        twilightforest:dark_door
        twilightforest:dark_trapdoor
        twilightforest:dark_gate
        twilightforest:time_door
        twilightforest:time_trapdoor
        twilightforest:time_gate
        twilightforest:trans_door
        twilightforest:trans_trapdoor
        twilightforest:trans_gate
        twilightforest:mine_door
        twilightforest:mine_trapdoor
        twilightforest:mine_gate
        twilightforest:sort_door
        twilightforest:sort_trapdoor
        twilightforest:sort_gate
        quark:spruce_trapdoor
        quark:birch_trapdoor
        quark:jungle_trapdoor
        quark:acacia_trapdoor
        quark:dark_oak_trapdoor
        quark:nether_brick_fence_gate
        netherex:quartz_fence_gate
        netherex:nether_brick_fence_gate
        netherex:red_nether_brick_fence_gate
        netherex:gloomy_nether_brick_fence_gate
        netherex:lively_nether_brick_fence_gate
        netherex:fiery_nether_brick_fence_gate
        netherex:icy_nether_brick_fence_gate
        netherex:basalt_fence_gate
        netherex:smooth_basalt_fence_gate
        netherex:basalt_brick_fence_gate
        netherex:basalt_pillar_fence_gate
        aether_legacy:skyroot_fence_gate
        aether_legacy:skyroot_trapdoor
        aether_legacy:zanite_trapdoor
        aether_legacy:skyroot_door
        aether_legacy:zanite_door
     >
}


##########################################################################################################
# elite_ai
#--------------------------------------------------------------------------------------------------------#
# Options to control the types of elite AI and their weighted chances of occurring.
##########################################################################################################

elite_ai {
    # List of mobs that can gain special AI patterns and their chances to gain those patterns.
    # You can specify multiple chances for each entity - each chance will be rolled and multiple AIs can stack.
    # Note that the entity must have task-based AI enabled.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:zombie 0.05 0.05, minecraft:skeleton 0.2 0.05, minecraft:zombie_pigman 0.1 0.05 0.02 } ]
    S:_mob_list <
        
     >

    # Weight for the barrage ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_barrage=1

    # Weight for the charge ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_charge=1

    # Weight for the jump ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_jump=1

    # Weight for the leap ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_leap=1

    # Weight for the shaman ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_shaman=1

    # Weight for the spawner ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_spawner=1

    # Weight for the sprint ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_sprint=1

    # Weight for the thief ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_thief=1

    # Weight for the throw ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_throw=1

    # Weight for the throw_player ai pattern to be chosen.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=1 ]
    I:ai_throw_player=1

    # Flat health increase added to mobs with barrage ai.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=20.0 ]
    D:barrage_health_boost=20.0

    # Flat health increase added to mobs with charge ai.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=20.0 ]
    D:charge_health_boost=20.0

    # Knockback resistance added to mobs with charge ai.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.5 ]
    D:charge_knockback_resistance=0.5

    # Speed increase multiplier to mobs with leap ai. Recommended to keep this well below 0.5.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=0.1 ]
    D:leap_speed_boost=0.1

    # Amount (in half-hearts) healed by mobs with shaman ai every 2 seconds. Can be overridden by the mob's nbt data.
    #    >> Float:[ Range={ -Infinity, Infinity }, Default=1.0 ]
    D:shaman_heal_amount=2.0

    # Flat health increase added to mobs with shaman ai.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=20.0 ]
    D:shaman_health_boost=25.0

    # Flat health increase added to mobs with spawner ai.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=40.0 ]
    D:spawner_health_boost=45.0

    # Speed increase multiplier to mobs with spawner ai. Recommended to keep this well below 0.5.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=-0.2 ]
    D:spawner_speed_boost=-0.2

    # Speed increase multiplier to the boots worn by mobs with sprint ai (these can drop as loot!).
    # Recommended to keep this well below 0.5.
    #    >> Double:[ Range={ 0.0, Infinity }, Default=0.1 ]
    D:sprint_boots_speed_boost=0.1

    # Speed increase multiplier to mobs with sprint ai while they are sprinting. Can be overridden by the mob's nbt data.
    # Setting this to 0 breaks the sprint ai, so don't do that.
    #    >> Float:[ Range={ 0.0, Infinity }, Default=0.7 ]
    D:sprint_speed_boost=0.7

    # The minimum distance that mobs with thief ai will try to keep from players once they have stolen an item.
    # Can be overridden by the mob's nbt data.
    #    >> Float:[ Range={ 1.0, Infinity }, Default=16.0 ]
    D:thief_avoid_range=16.0

    # Speed increase multiplier to the helmet worn by mobs with thief ai (these can drop as loot!).
    # Recommended to keep this well below 0.5.
    #    >> Double:[ Range={ 0.0, Infinity }, Default=0.1 ]
    D:thief_helmet_speed_boost=0.1

    # Flat health increase added to mobs with throw-player ai.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=20.0 ]
    D:throw_player_health_boost=20.0

    # Flat damage increase added to the helmet worn by mobs with throw-player ai (these can drop as loot!).
    #    >> Double:[ Range={ 0.0, Infinity }, Default=1.0 ]
    D:throw_player_helmet_damage_boost=1.0

    # Knockback resistance added to mobs with throw-player ai.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.5 ]
    D:throw_player_knockback_resistance=0.5

    # Speed increase multiplier to mobs with throw ai. Recommended to keep this well below 0.5.
    #    >> Double:[ Range={ -Infinity, Infinity }, Default=0.1 ]
    D:throw_speed_boost=0.1
}


##########################################################################################################
# idle_activities
#--------------------------------------------------------------------------------------------------------#
# Options to customize all idle behaviors for monsters (fiddling/griefing).
##########################################################################################################

idle_activities {
    # The range at which mobs will search for blocks to target horizontally (xz-plane).
    #    >> Integer:[ Range={ 1, 2147483647 }, Default=12 ]
    I:range=12

    # The range at which mobs will search for blocks to target vertically (y-axis).
    #    >> Integer:[ Range={ 1, 2147483647 }, Default=6 ]
    I:range_vertical=6

    # Mobs' reach (from eye height) when targeting blocks. Player reach is about 4.5.
    #    >> Float:[ Range={ 0.0, Infinity }, Default=3.5 ]
    D:reach=2.5

    # The number of blocks each mob randomly searches to grief/fiddle with every "scan_delay" ticks.
    #    >> Integer:[ Range={ 1, 2147483647 }, Default=32 ]
    I:scan_count=32

    # The maximum number of blocks that can be searched in any given tick by all mobs. 0 is no limit.
    #    >> Integer:[ Range={ 0, 2147483647 }, Default=0 ]
    I:scan_count_global=30

    # The number of ticks between each block scan.
    #    >> Integer:[ Range={ 1, 2147483647 }, Default=2 ]
    I:scan_delay=20
}


##########################################################################################################
# idle_fiddling
#--------------------------------------------------------------------------------------------------------#
# Options to customize monsters' idle fiddling behavior.
##########################################################################################################

idle_fiddling {
    # If true, mobs will flip switches, press buttons, etc. while not doing anything else.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:_enabled=true

    # List of mobs that can gain idle fiddling AI (note that the entity must have task-based AI enabled).
    # The number after each mob is the chance for that mob type to get the AI, from 0 to 1.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:skeleton 1.0, minecraft:zombie_pigman 1.0 } ]
    S:mob_list <
        minecraft:skeleton 0.7
        minecraft:zombie_pigman 0.7
        specialmobs:brutepigzombie 0.7
        specialmobs:fishingpigzombie 0.7
        specialmobs:giantpigzombie 0.7
        specialmobs:hungrypigzombie 0.7
        specialmobs:knightpigzombie 0.7
        specialmobs:plaguepigzombie 0.7
        specialmobs:vampirepigzombie 0.7
        minecraft:wither_skeleton 0.7
        minecraft:stray 0.7
        minecraft:evocation_illager 0.7
        minecraft:vindication_illager 0.7
        minecraft:illusion_illager 0.7
        specialmobs:sniperskeleton 0.7
        specialmobs:bruteskeleton 0.7
        specialmobs:poisonskeleton 0.7
        specialmobs:ninjaskeleton 0.7
        specialmobs:fireskeleton 0.7
        specialmobs:giantskeleton 0.7
        specialmobs:gatlingskeleton 0.7
        specialmobs:spitfireskeleton 0.7
        specialmobs:brutewitherskeleton 0.7
        specialmobs:gatlingwitherskeleton 0.7
        specialmobs:giantwitherskeleton 0.7
        specialmobs:knightwitherskeleton 0.7
        specialmobs:ninjawitherskeleton 0.7
        specialmobs:sniperwitherskeleton 0.7
        specialmobs:spitfirewitherskeleton 0.7
        primitivemobs:skeleton_warrior 0.7
        primitivemobs:goblin 0.7
        primitivemobs:skeleton_warrior 0.7
        quark:ashen 0.7
        quark:pirate 0.7
        quark:wraith 1.0
        iceandfire:myrmex_worker 0.7
        iceandfire:myrmex_soldier 0.7
        iceandfire:myrmex_sentinel 0.7
        rats:plague_beast 0.7
        iceandfire:if_troll 1.0
        twilightforest:minotaur 0.7
        twilightforest:yeti 0.7
        twilightforest:snow_guardian 0.7
        twilightforest:troll 0.7
        twilightforest:kobold 0.7
        twilightforest:redcap_sapper 0.7
        twilightforest:skeleton_druid 0.7
        twilightforest:redcap 0.7
        aether_legacy:cockatrice 0.7
     >

    # Specific blocks that will NOT be fiddled with by mobs.
    # Only really useful if you whitelist an entire namespace (*) to prevent mobs from fiddling with a few blocks from that namespace.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ long_list_here } ]
    S:target_blacklist <
     >

    # Specific blocks that will be fiddled with by mobs.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ long_list_here } ]
    S:target_blocks <
        minecraft:tnt
        minecraft:wooden_door
        minecraft:lever
        minecraft:stone_button
        minecraft:cake
        minecraft:unpowered_repeater
        minecraft:powered_repeater
        minecraft:fence_gate
        minecraft:wooden_button
        minecraft:unpowered_comparator
        minecraft:powered_comparator
        minecraft:spruce_fence_gate
        minecraft:birch_fence_gate
        minecraft:jungle_fence_gate
        minecraft:dark_oak_fence_gate
        minecraft:acacia_fence_gate
        minecraft:spruce_door
        minecraft:birch_door
        minecraft:jungle_door
        minecraft:acacia_door
        minecraft:dark_oak_door
        biomesoplenty:sacred_oak_fence_gate
        biomesoplenty:cherry_fence_gate
        biomesoplenty:umbran_fence_gate
        biomesoplenty:fir_fence_gate
        biomesoplenty:ethereal_fence_gate
        biomesoplenty:magic_fence_gate
        biomesoplenty:mangrove_fence_gate
        biomesoplenty:palm_fence_gate
        biomesoplenty:redwood_fence_gate
        biomesoplenty:willow_fence_gate
        biomesoplenty:pine_fence_gate
        biomesoplenty:hellbark_fence_gate
        biomesoplenty:jacaranda_fence_gate
        biomesoplenty:mahogany_fence_gate
        biomesoplenty:ebony_fence_gate
        biomesoplenty:eucalyptus_fence_gate
        biomesoplenty:sacred_oak_door_block
        biomesoplenty:cherry_door_block
        biomesoplenty:umbran_door_block
        biomesoplenty:fir_door_block
        biomesoplenty:ethereal_door_block
        biomesoplenty:magic_door_block
        biomesoplenty:mangrove_door_block
        biomesoplenty:palm_door_block
        biomesoplenty:redwood_door_block
        biomesoplenty:willow_door_block
        biomesoplenty:pine_door_block
        biomesoplenty:hellbark_door_block
        biomesoplenty:jacaranda_door_block
        biomesoplenty:mahogany_door_block
        biomesoplenty:ebony_door_block
        biomesoplenty:eucalyptus_door_block
        betternether:stalagnate_planks_gate
        betternether:stalagnate_planks_button
        betternether:reeds_gate
        betternether:reeds_button
        betternether:cincinnasite_button
        betternether:bone_button
        betternether:bone_reed_door
        betternether:bone_cincinnasite_door
        rustic:fence_gate_olive
        rustic:fence_gate_ironwood
        rustic:olive_door
        rustic:ironwood_door
        twilightforest:twilight_oak_button
        twilightforest:twilight_oak_door
        twilightforest:twilight_oak_gate
        twilightforest:canopy_button
        twilightforest:canopy_door
        twilightforest:canopy_gate
        twilightforest:mangrove_button
        twilightforest:mangrove_door
        twilightforest:mangrove_gate
        twilightforest:dark_button
        twilightforest:dark_door
        twilightforest:dark_gate
        twilightforest:time_button
        twilightforest:time_door
        twilightforest:time_gate
        twilightforest:trans_button
        twilightforest:trans_door
        twilightforest:trans_gate
        twilightforest:mine_button
        twilightforest:mine_door
        twilightforest:mine_gate
        twilightforest:sort_button
        twilightforest:sort_door
        twilightforest:sort_gate
        quark:iron_button
        quark:gold_button
        quark:nether_brick_fence_gate
        quark:spruce_button
        quark:birch_button
        quark:jungle_button
        quark:acacia_button
        quark:dark_oak_button
        netherex:quartz_fence_gate
        netherex:nether_brick_fence_gate
        netherex:red_nether_brick_fence_gate
        netherex:gloomy_nether_brick_fence_gate
        netherex:lively_nether_brick_fence_gate
        netherex:fiery_nether_brick_fence_gate
        netherex:icy_nether_brick_fence_gate
        netherex:basalt_fence_gate
        netherex:smooth_basalt_fence_gate
        netherex:basalt_brick_fence_gate
        netherex:basalt_pillar_fence_gate
        aether_legacy:skyroot_fence_gate
        aether_legacy:aether_lever
        aether_legacy:holystone_button
        aether_legacy:skyroot_button
        aether_legacy:skyroot_door
        undergroundbiomes:igneous_stone_button_down
        undergroundbiomes:igneous_stone_button_up
        undergroundbiomes:igneous_stone_button_north
        undergroundbiomes:igneous_stone_button_south
        undergroundbiomes:igneous_stone_button_west
        undergroundbiomes:igneous_stone_button_east
        undergroundbiomes:metamorphic_stone_button_down
        undergroundbiomes:metamorphic_stone_button_up
        undergroundbiomes:metamorphic_stone_button_north
        undergroundbiomes:metamorphic_stone_button_south
        undergroundbiomes:metamorphic_stone_button_west
        undergroundbiomes:metamorphic_stone_button_east
        undergroundbiomes:sedimentary_stone_button_down
        undergroundbiomes:sedimentary_stone_button_up
        undergroundbiomes:sedimentary_stone_button_north
        undergroundbiomes:sedimentary_stone_button_south
        undergroundbiomes:sedimentary_stone_button_west
        undergroundbiomes:sedimentary_stone_button_east
        minecraft:trapdoor
        twilightforest:twilight_oak_trapdoor
        twilightforest:canopy_trapdoor
        twilightforest:mangrove_trapdoor
        twilightforest:dark_trapdoor
        twilightforest:time_trapdoor
        twilightforest:trans_trapdoor
        twilightforest:mine_trapdoor
        twilightforest:sort_trapdoor
        quark:spruce_trapdoor
        quark:birch_trapdoor
        quark:jungle_trapdoor
        quark:acacia_trapdoor
        quark:dark_oak_trapdoor
        aether_legacy:skyroot_trapdoor
        aether_legacy:zanite_trapdoor
     >
}


##########################################################################################################
# idle_griefing
#--------------------------------------------------------------------------------------------------------#
# Options to customize monsters' idle block breaking.
##########################################################################################################

idle_griefing {
    # If true, mobs will destroy blocks while not doing anything else.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:_enabled=true

    # If true, block breaking AI will automatically target all light sources (light value > 1).
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:break_lights=true

    # If true, a lound snapping sound (the vanilla door break sound) will be played when a block
    # is broken, which is audible regardless of distance.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=false ]
    B:break_sound=false

    # The block breaking speed multiplier for mobs, relative to the player's block breaking speed.
    #    >> Float:[ Range={ 0.0, Infinity }, Default=0.5 ]
    D:break_speed=0.67

    # If true, griefed blocks will leave item drops.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:leave_drops=true

    # If true, creepers will be very mad about not having arms to break things with, and resort to what they know best...
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:mad_creepers=false

    # List of mobs that can gain passive griefing AI (note that the entity must have task-based AI enabled).
    # The number after each mob is the chance for that mob type to get the AI, from 0 to 1.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:zombie 1.0, minecraft:creeper 1.0, minecraft:zombie_pigman 1.0 } ]
    S:mob_list <
        minecraft:zombie 0.7
        minecraft:zombie_villager 0.7
        minecraft:husk 0.7
        minecraft:stray 0.7
        specialmobs:hungryzombie 0.7
        specialmobs:brutezombie 0.7
        specialmobs:plaguezombie 0.7
        specialmobs:fishingzombie 0.7
        specialmobs:firezombie 0.7
        specialmobs:giantzombie 0.7
        zombie_players:zombie_player 0.7
        quark:dweller 0.7
        primitivemobs:goblin 1.0
        primitivemobs:harpy 0.7
        primitivemobs:haunted_tool 0.5
        iceandfire:myrmex_worker 1.0
        iceandfire:myrmex_soldier 1.0
        iceandfire:myrmex_sentinel 1.0
        specialmobs:witchspider 0.7
        specialmobs:giantspider 0.7
        magma_monsters:magma_monster 0.5
        minecraft:silverfish 0.7
        specialmobs:blindingsilverfish 0.7
        specialmobs:fishingsilverfish 0.7
        specialmobs:flyingsilverfish 0.7
        specialmobs:poisonsilverfish 0.7
        specialmobs:toughsilverfish 0.7
        rats:plague_beast 0.7
        netherex:wight 0.7
        mod_lavacow:zombiefrozen 0.7
        mod_lavacow:zombiemushroom 0.7
        mod_lavacow:foglet 0.7
        mod_lavacow:scarecrow 0.7
        mod_lavacow:pingu 0.7
        twilightforest:minotaur 0.7
        twilightforest:minoshroom 0.7
        twilightforest:yeti 0.7
        twilightforest:snow_guardian 0.7
        twilightforest:troll 0.7
        twilightforest:kobold 0.7
        twilightforest:redcap_sapper 0.7
        specialmobs:knightskeleton 0.7
        twilightforest:skeleton_druid 0.7
        twilightforest:redcap 0.7
        iceandfire:if_troll 1.0
        aether_legacy:cockatrice 0.7
        mod_lavacow:ptera 0.5
        mod_lavacow:vespa 0.5
        minecraft:polar_bear 0.7
        betteranimalsplus:brownbear 0.7
        betteranimalsplus:blackbear 0.7
        betteranimalsplus:kermodebear 0.7
     >

    # If true, mobs will only target blocks they have the tools to harvest.
    # For example, they will only break stone with a pickaxe.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=false ]
    B:requires_tools=true

    # Specific blocks that will NOT be griefed by mobs.
    # Only really useful if "break_lights" is enabled or when you whitelist an entire namespace (*) to create safe
    # light sources, prevent mobs from breaking normal world gen that produces light, or for removing a few blocks
    # from a namespace that you don't want mobs to break.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ long_list_here } ]
    S:target_blacklist <
        iceandfire:myrmex_desert_biolight
        iceandfire:myrmex_jungle_biolight
        quark:glowcelium
        quark:glowshroom
        quark:glowshroom_block
        mod_lavacow:glowshroom
        mod_lavacow:glowshroom_block_stem
        mod_lavacow:glowshroom_block_cap
        glaretorch:blocklight
        biomesoplenty:flower_0
        biomesoplenty:mushroom
        twilightforest:firefly
        biomesoplenty:coral
        stygian:endglow
        simpleores:mythril_ore
        osv:simpleores_mythril_ore_undergroundbiomes_igneous_stone
        osv:simpleores_mythril_ore_undergroundbiomes_sedimentary_stone_6
        osv:simpleores_mythril_ore_undergroundbiomes_igneous_stone_1
        osv:simpleores_mythril_ore_undergroundbiomes_metamorphic_stone_1
        osv:simpleores_mythril_ore_undergroundbiomes_metamorphic_stone
        osv:simpleores_mythril_ore_undergroundbiomes_sedimentary_stone_2
        osv:simpleores_mythril_ore_red_sandstone
        osv:simpleores_mythril_ore_undergroundbiomes_sedimentary_stone_3
        osv:simpleores_mythril_ore_undergroundbiomes_metamorphic_stone_4
        osv:simpleores_mythril_ore_undergroundbiomes_igneous_stone_2
        osv:simpleores_mythril_ore_stained_hardened_clay
        osv:simpleores_mythril_ore_quark_elder_prismarine
        osv:simpleores_mythril_ore_hardened_clay
        osv:simpleores_mythril_ore_undergroundbiomes_sedimentary_stone_1
        osv:simpleores_mythril_ore_undergroundbiomes_sedimentary_stone
        osv:simpleores_mythril_ore_undergroundbiomes_igneous_stone_5
        osv:simpleores_mythril_ore_undergroundbiomes_sedimentary_stone_4
        osv:simpleores_mythril_ore_undergroundbiomes_metamorphic_stone_7
        osv:simpleores_mythril_ore_undergroundbiomes_sedimentary_stone_5
        osv:simpleores_mythril_ore_quark_biome_cobblestone
        osv:simpleores_mythril_ore_undergroundbiomes_metamorphic_stone_5
        osv:simpleores_mythril_ore_undergroundbiomes_igneous_stone_6
        osv:simpleores_mythril_ore_undergroundbiomes_metamorphic_stone_6
        osv:simpleores_mythril_ore_sandstone
        osv:simpleores_mythril_ore_undergroundbiomes_igneous_stone_3
        osv:simpleores_mythril_ore_undergroundbiomes_metamorphic_stone_2
        osv:simpleores_mythril_ore_quark_biome_cobblestone_2
        osv:simpleores_mythril_ore_undergroundbiomes_metamorphic_stone_3
        osv:simpleores_mythril_ore_undergroundbiomes_sedimentary_stone_7
        osv:simpleores_mythril_ore_undergroundbiomes_igneous_stone_7
        osv:simpleores_mythril_ore_rotn_blocks_cave_moss
        osv:simpleores_mythril_ore_undergroundbiomes_igneous_stone_4
        osv:simpleores_mythril_ore_quark_biome_cobblestone_1
        osv:simpleores_mythril_ore_pyrotech_limestone
        simpleores:adamantium_ore
        osv:simpleores_adamantium_ore_undergroundbiomes_sedimentary_stone_4
        osv:simpleores_adamantium_ore_undergroundbiomes_igneous_stone_1
        osv:simpleores_adamantium_ore_undergroundbiomes_igneous_stone
        osv:simpleores_adamantium_ore_undergroundbiomes_igneous_stone_4
        osv:simpleores_adamantium_ore_undergroundbiomes_sedimentary_stone_6
        osv:simpleores_adamantium_ore_undergroundbiomes_igneous_stone_7
        osv:simpleores_adamantium_ore_quark_biome_cobblestone_2
        osv:simpleores_adamantium_ore_undergroundbiomes_metamorphic_stone
        osv:simpleores_adamantium_ore_undergroundbiomes_igneous_stone_5
        osv:simpleores_adamantium_ore_red_sandstone
        osv:simpleores_adamantium_ore_undergroundbiomes_sedimentary_stone_3
        osv:simpleores_adamantium_ore_undergroundbiomes_metamorphic_stone_1
        osv:simpleores_adamantium_ore_rotn_blocks_cave_moss
        osv:simpleores_adamantium_ore_undergroundbiomes_sedimentary_stone_1
        osv:simpleores_adamantium_ore_quark_elder_prismarine
        osv:simpleores_adamantium_ore_undergroundbiomes_metamorphic_stone_4
        osv:simpleores_adamantium_ore_undergroundbiomes_igneous_stone_3
        osv:simpleores_adamantium_ore_pyrotech_limestone
        osv:simpleores_adamantium_ore_undergroundbiomes_sedimentary_stone_2
        osv:simpleores_adamantium_ore_quark_biome_cobblestone_1
        osv:simpleores_adamantium_ore_undergroundbiomes_sedimentary_stone_7
        osv:simpleores_adamantium_ore_undergroundbiomes_metamorphic_stone_2
        osv:simpleores_adamantium_ore_stained_hardened_clay
        osv:simpleores_adamantium_ore_quark_biome_cobblestone
        osv:simpleores_adamantium_ore_undergroundbiomes_igneous_stone_6
        osv:simpleores_adamantium_ore_undergroundbiomes_sedimentary_stone
        osv:simpleores_adamantium_ore_undergroundbiomes_metamorphic_stone_3
        osv:simpleores_adamantium_ore_undergroundbiomes_metamorphic_stone_5
        osv:simpleores_adamantium_ore_undergroundbiomes_metamorphic_stone_7
        osv:simpleores_adamantium_ore_undergroundbiomes_igneous_stone_2
        osv:simpleores_adamantium_ore_undergroundbiomes_metamorphic_stone_6
        osv:simpleores_adamantium_ore_sandstone
        osv:simpleores_adamantium_ore_hardened_clay
        osv:simpleores_adamantium_ore_undergroundbiomes_sedimentary_stone_5
        arcanearchives:storage_raw_quartz
        arcanearchives:storage_shaped_quartz
        arcanearchives:radiant_chest
        arcanearchives:radiant_crafting_table
        arcanearchives:radiant_lantern
        arcanearchives:radiant_resonator
        arcanearchives:raw_quartz_cluster
        arcanearchives:gemcutters_table
        arcanearchives:radiant_trove
        arcanearchives:monitoring_crystal
        arcanearchives:radiant_tank
        arcanearchives:brazier_of_hoarding
     >

    # Specific blocks that will be griefed by mobs.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ long_list_here } ]
    S:target_blocks <
        minecraft:bed
        minecraft:golden_rail
        minecraft:farmland
        minecraft:lit_furnace
        aether_legacy:skyroot_bed
        minecraft:cake
        minecraft:trapdoor
        minecraft:iron_trapdoor
        twilightforest:twilight_oak_trapdoor
        twilightforest:canopy_trapdoor
        twilightforest:mangrove_trapdoor
        twilightforest:dark_trapdoor
        twilightforest:time_trapdoor
        twilightforest:trans_trapdoor
        twilightforest:mine_trapdoor
        twilightforest:sort_trapdoor
        quark:spruce_trapdoor
        quark:birch_trapdoor
        quark:jungle_trapdoor
        quark:acacia_trapdoor
        quark:dark_oak_trapdoor
        aether_legacy:skyroot_trapdoor
        aether_legacy:zanite_trapdoor
        aether_legacy:skyroot_wall_sign
        aether_legacy:skyroot_standing_sign
        minecraft:ladder
        betternether:reeds_ladder
        twilightforest:iron_ladder
        quark:iron_ladder
        aether_legacy:skyroot_ladder
        dungeontactics:fan_block
        dungeontactics:flamer_block
        dungeontactics:caltrops
        dungeontactics:caltrops_poison
        dungeontactics:trap_clamp
        minetraps:nail_trap
        minetraps:bear_trap
        minecraft:glass
        minecraft:stained_glass
        minecraft:glass_pane
        minecraft:stained_glass_pane
        sereneseasons:greenhouse_glass
        quark:framed_glass
        quark:framed_glass_pane
        dungeontactics:dungeon_glass
        aether_legacy:quicksoil_glass
        aether_legacy:quicksoil_glass_pane
        wards:ward
        minetraps:barbed_wire
        minetraps:razor_wire
        minetraps:barbed_wire_fence
        minetraps:spikes
        minetraps:spikes_on
        minetraps:spikes_toxic
        minetraps:spikes_toxic_on
        minetraps:wall_spikes
        minetraps:wall_spikes_on
        minecraft:wooden_pressure_plate
        minecraft:unpowered_repeater
        minecraft:melon_block
        minecraft:pumpkin
        minecraft:beacon
        minecraft:piston
        minecraft:crafting_table
        minecraft:wall_sign
        minecraft:standing_sign
        minecraft:hopper
        minecraft:dropper
        biomesoplenty:bramble_plant
        betterwithaddons:thorns
        minecraft:stone_pressure_plate
        minecraft:light_weighted_pressure_plate
        minecraft:heavy_weighted_pressure_plate
        betterwithmods:steel_pressure_plate
        quark:spruce_pressure_plate
        quark:birch_pressure_plate
        quark:jungle_pressure_plate
        quark:acacia_pressure_plate
        quark:dark_oak_pressure_plate
        quark:spruce_button
        quark:birch_button
        quark:jungle_button
        quark:acacia_button
        quark:dark_oak_button
        quark:obsidian_pressure_plate
        aether_legacy:holystone_pressure_plate
        aether_legacy:skyroot_pressure_plate
        aether_legacy:zanite_pressure_plate
        aether_legacy:aether_lever
        aether_legacy:holystone_button
        aether_legacy:skyroot_button
        undergroundbiomes:igneous_stone_button_down
        undergroundbiomes:igneous_stone_button_up
        undergroundbiomes:igneous_stone_button_north
        undergroundbiomes:igneous_stone_button_south
        undergroundbiomes:igneous_stone_button_west
        undergroundbiomes:igneous_stone_button_east
        undergroundbiomes:metamorphic_stone_button_down
        undergroundbiomes:metamorphic_stone_button_up
        undergroundbiomes:metamorphic_stone_button_north
        undergroundbiomes:metamorphic_stone_button_south
        undergroundbiomes:metamorphic_stone_button_west
        undergroundbiomes:metamorphic_stone_button_east
        undergroundbiomes:sedimentary_stone_button_down
        undergroundbiomes:sedimentary_stone_button_up
        undergroundbiomes:sedimentary_stone_button_north
        undergroundbiomes:sedimentary_stone_button_south
        undergroundbiomes:sedimentary_stone_button_west
        undergroundbiomes:sedimentary_stone_button_east
        minecraft:stone_button
        minecraft:wooden_button
        betternether:stalagnate_planks_button
        betternether:reeds_button
        betternether:cincinnasite_button
        betternether:bone_button
        twilightforest:twilight_oak_button
        twilightforest:twilight_oak_plate
        twilightforest:canopy_button
        twilightforest:canopy_plate
        twilightforest:mangrove_button
        twilightforest:mangrove_plate
        twilightforest:dark_button
        twilightforest:dark_plate
        twilightforest:time_button
        twilightforest:time_plate
        twilightforest:trans_button
        twilightforest:trans_plate
        twilightforest:mine_button
        twilightforest:mine_plate
        twilightforest:sort_button
        twilightforest:sort_plate
        quark:spruce_button
        quark:birch_button
        quark:jungle_button
        quark:acacia_button
        quark:dark_oak_button
        quark:iron_button
        quark:gold_button
        aether_legacy:holystone_button
        aether_legacy:skyroot_button
        arcanearchives:quartz_sliver
        minecraft:string
        minecraft:web
        harvestcraft:pamspiderweb
        charset:logic_wire_n
     >

    # Specific lootable blocks that will be griefed by mobs.
    # Unlike the normal "target_blocks", these blocks will not be targeted if they still have a loot table tag
    # (e.g., unopened dungeon chests).
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ long_list_here } ]
    S:target_lootable <
     >
}


##########################################################################################################
# jockeys
#--------------------------------------------------------------------------------------------------------#
# Options relating to which mobs should act as riders or mounts.
##########################################################################################################

jockeys {
    # List of mobs that can be ridden on by normal-sized riders (not all entities can be controlled by their rider).
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:spider, minecraft:slime, minecraft:pig, minecraft:sheep, minecraft:cow, minecraft:polar_bear } ]
    S:mount_list <
        minecraft:spider
        minecraft:pig
        minecraft:sheep
        minecraft:cow
        minecraft:polar_bear
        minecraft:skeleton_horse
        minecraft:zombie_horse
        minecraft:donkey
        minecraft:mule
        minecraft:llama
        specialmobs:desertspider
        specialmobs:flyingspider
        specialmobs:giantspider
        specialmobs:hungryspider
        specialmobs:motherspider
        specialmobs:palespider
        specialmobs:poisonspider
        specialmobs:webspider
        specialmobs:witchspider
        animania:sow_yorkshire
        animania:hog_yorkshire
        animania:sow_old_spot
        animania:hog_old_spot
        animania:sow_large_black
        animania:hog_large_black
        animania:sow_large_white
        animania:hog_large_white
        animania:sow_hampshire
        animania:hog_hampshire
        animania:sow_duroc
        animania:hog_duroc
        animania:cow_angus
        animania:bull_angus
        animania:cow_friesian
        animania:bull_friesian
        animania:cow_hereford
        animania:bull_hereford
        animania:cow_holstein
        animania:bull_holstein
        animania:cow_longhorn
        animania:bull_longhorn
        animania:cow_highland
        animania:bull_highland
        animania:cow_jersey
        animania:bull_jersey
        animania:mare_draft
        animania:stallion_draft
        betteranimalsplus:brownbear
        betteranimalsplus:blackbear
        betteranimalsplus:moose
        betteranimalsplus:kermodebear
        primitivemobs:trollager
        betterwithmods:bwm_jungle_spider
        betteranimalsplus:tarantula
        animania:ewe_friesian
        animania:ram_friesian
        animania:ewe_suffolk
        animania:ram_suffolk
        animania:ewe_dorper
        animania:ram_dorper
        animania:ewe_dorset
        animania:ram_dorset
        animania:ewe_merino
        animania:ram_merino
        animania:ewe_jacob
        animania:ram_jacob
        aether_legacy:cockatrice
        aether_legacy:moa
        aether_legacy:phyg
        aether_legacy:flying_cow
        aether_legacy:sheepuff
        primitivemobs:trollager
        twilightforest:hostile_wolf
        twilightforest:fire_beetle
        twilightforest:slime_beetle
        twilightforest:pinch_beetle
        twilightforest:mist_wolf
        twilightforest:king_spider
        twilightforest:winter_wolf
     >

    # List of mobs that can be ridden on by small riders or normal-sized riders that are babies(not all entities can be controlled by their rider).
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:chicken, minecraft:rabbit } ]
    S:mount_list_small <
        minecraft:chicken
        minecraft:rabbit
        animania:hen_leghorn
        animania:rooster_leghorn
        animania:hen_orpington
        animania:rooster_orpington
        animania:hen_plymouth_rock
        animania:rooster_plymouth_rock
        animania:hen_rhode_island_red
        animania:rooster_rhode_island_red
        animania:hen_wyandotte
        animania:rooster_wyandotte
        animania:kid_alpine
        animania:buck_alpine
        animania:doe_alpine
        animania:kid_angora
        animania:buck_angora
        animania:doe_angora
        animania:kid_fainting
        animania:buck_fainting
        animania:doe_fainting
        animania:kid_kiko
        animania:buck_kiko
        animania:doe_kiko
        animania:kid_kinder
        animania:buck_kinder
        animania:doe_kinder
        animania:kid_nigerian_dwarf
        animania:buck_nigerian_dwarf
        animania:doe_nigerian_dwarf
        animania:kid_pygmy
        animania:buck_pygmy
        animania:doe_pygmy
        animania:lamb_friesian
        animania:lamb_suffolk
        animania:lamb_dorper
        animania:lamb_dorset
        animania:lamb_merino
        animania:lamb_jacob
        animania:buck_cottontail
        animania:doe_cottontail
        animania:buck_chinchilla
        animania:doe_chinchilla
        animania:buck_dutch
        animania:doe_dutch
        animania:buck_havana
        animania:doe_havana
        animania:buck_jack
        animania:doe_jack
        animania:buck_new_zealand
        animania:doe_new_zealand
        animania:buck_rex
        animania:doe_rex
        animania:buck_lop
        animania:doe_lop
        quark:foxhound
     >

    # List of mobs that can ride normal-sized mounts and the chance for them to gain the rider AI.
    # Note that the entity must have task-based AI enabled.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={ minecraft:zombie 0.05, minecraft:skeleton 0.1, minecraft:creeper 0.05, minecraft:witch 0.05, minecraft:zombie_pigman 0.1 } ]
    S:rider_list <
        minecraft:zombie 0.05
        minecraft:skeleton 0.1
        minecraft:creeper 0.05
        minecraft:witch 0.05
        minecraft:zombie_villager 0.05
        minecraft:husk 0.05
        specialmobs:darkcreeper 0.05
        specialmobs:deathcreeper 0.05
        specialmobs:doomcreeper 0.05
        specialmobs:endercreeper 0.05
        specialmobs:firecreeper 0.05
        specialmobs:jumpingcreeper 0.05
        specialmobs:lightningcreeper 0.05
        specialmobs:minicreeper 0.05
        specialmobs:splittingcreeper 0.05
        specialmobs:specialzombie 0.05
        specialmobs:brutezombie 0.05
        specialmobs:firezombie 0.05
        specialmobs:fishingzombie 0.05
        specialmobs:giantzombie 0.05
        specialmobs:hungryzombie 0.05
        specialmobs:huskzombie 0.05
        specialmobs:plaguezombie 0.05
        primitivemobs:skeleton_warrior 0.1
        primitivemobs:goblin 0.3
        primitivemobs:rocket_creeper 0.05
        primitivemobs:festive_creeper 0.05
        primitivemobs:support_creeper 0.05
        specialmobs:bruteskeleton 0.1
        specialmobs:fireskeleton 0.1
        specialmobs:gatlingskeleton 0.1
        specialmobs:giantskeleton 0.1
        specialmobs:knightskeleton 0.1
        specialmobs:poisonskeleton 0.1
        specialmobs:sniperskeleton 0.1
        specialmobs:spitfireskeleton 0.1
        specialmobs:strayskeleton 0.1
        specialmobs:brutewitherskeleton 0.1
        specialmobs:gatlingwitherskeleton 0.1
        specialmobs:giantwitherskeleton 0.1
        specialmobs:knightwitherskeleton 0.1
        specialmobs:sniperwitherskeleton 0.1
        specialmobs:spitfirewitherskeleton 0.1
        quark:dweller 0.05
        quark:ashen 0.1
        minecraft:evocation_illager 0.3
        minecraft:vindication_illager 0.3
        minecraft:illusion_illager 0.3
        specialmobs:dominationwitch 0.05
        specialmobs:shadowswitch 0.05
        specialmobs:undeadwitch 0.05
        specialmobs:wildswitch 0.05
        specialmobs:windwitch 0.05
        zombie_players:zombie_player 0.05
        mowziesmobs:barakoan_barakoana 0.3
        mowziesmobs:barakoana 0.3
        mowziesmobs:barakoaya 0.3
     >

    # List of mobs that can only ride small mounts or normal-sized mounts that are babies and the chance for them to gain the rider AI.
    # Note that the entity must have task-based AI enabled.
    #    >> Entity_Array:[ Value={ entity_id <extra_data>, ~entity_id <extra_data> }, Default={  } ]
    S:rider_list_small <
     >
}


##########################################################################################################
# reaction_ai
#--------------------------------------------------------------------------------------------------------#
# Options to customize reactive behaviors.
##########################################################################################################

reaction_ai {
    # If true, all mobs will try to avoid TNT and creepers that are about to explode.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:avoid_explosions=true

    # If true, all mobs will call for help from nearby mobs of the same type when struck.
    # Note that this does not trigger from killing blows.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:call_for_help=true

    # Chance for mobs to call for help when dealt a killing blow.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.2 ]
    D:call_for_help_on_death=0.0

    # The chance any mob will try to sidestep an arrow fired in their direction.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.4 ]
    D:dodge_arrows=0.20
}


##########################################################################################################
# villages
#--------------------------------------------------------------------------------------------------------#
# Options to control village aggression and reputation.
# For reference, starting reputation is 0, minimum is -30 and maximum is 10.
# You are considered an enemy to a village if your reputation is -15 or lower.
##########################################################################################################

villages {
    # Chance for you to be marked as an aggressor (to be attacked) when you break any block in a village
    # that is not on the "block_blacklist" while your reputation is low enough.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.1 ]
    D:block_aggression_chance=0.0

    # The "block_aggression_chance" and "block_treasured_aggression_chance" only trigger if your reputation
    # in the village is less than or equal to this limit.
    #    >> Integer:[ Range={ -30, 10 }, Default=-5 ]
    I:block_aggression_limit=-5

    # Specific blocks that will NOT anger villagers when broken.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ long_list_here } ]
    S:block_blacklist <
        
     >

    # Chance for you to lose 1 reputation when you break any block in a village that is not on the
    # "block_blacklist" while your reputation is low enough.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.15 ]
    D:block_rep_loss_chance=0.0

    # The "block_rep_loss_chance" and "block_treasured_rep_loss_chance" only trigger if your reputation
    # in the village is equal to or less than this limit.
    #    >> Integer:[ Range={ -30, 10 }, Default=8 ]
    I:block_rep_loss_limit=8

    # Chance for you to be marked as an aggressor (to be attacked) when you break a block in a village that
    # is on the "block_treasured_list" while your reputation is low enough.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=1.0 ]
    D:block_treasured_aggression_chance=0

    # Specific blocks that use separate chances for aggression and rep loss from other blocks.
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ long_list_here } ]
    S:block_treasured_list <
        
     >

    # Chance for you to lose 1 reputation when you break a block in a village that is on the "block_treasured_list"
    # while your reputation is low enough.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=1.0 ]
    D:block_treasured_rep_loss_chance=0

    # Specific blocks that WILL aggro villagers when broken. If any blocks are specified here, they will
    # then be the only blocks that anger villagers (i.e., trigger reputation loss and aggression).
    #    >> Block_Array:[ Value={ mod_id:block_id, mod_id:block_id[<properties>], mod_id:* }, Default={ long_list_here } ]
    S:block_whitelist <
     >

    # If true, the "/villageinfo" command will state the village center position.
    # As the command has unlimited search radius, disable this to prevent players from using the command
    # to easily find the nearest village.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:command_include_center=false

    # Chance for you to earn 1 reputation for each monster killed near a village. The only reasonable way
    # to restore rep from -15 or lower with "villagers_defend" enabled.
    #    >> Double:[ Range={ 0.0, 1.0 }, Default=0.2 ]
    D:help_rep_chance=0

    # If true, all players known to a village will gain 1 rep when a new house is added to a village and
    # lose 1 rep when a house is lost. Highly recommended to keep "refresh_houses" enabled when this is.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:house_rep=false

    # If true, all villagers will spawn with randomized names based on their profession and career.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:name_villagers=false

    # If true, villager names will be marked as 'always shown' so that you do not need to mouse over them
    # to see their names. Also makes them a little easier to keep track of.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:name_villagers_always_show=false

    # If true, houses will stay a part of a village permanently once added (until their doors are destroyed
    # or all villagers in the village are killed), instead of being constantly added/removed as villagers move around.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:refresh_houses=false

    # If true, particle effects will play when players lose or gain village reputation.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:reputation_particles=false

    # If true, villager sound effects will play when players lose or gain village reputation.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:reputation_sounds=false

    # If true, villagers will defend their village by attacking its aggressors and players with
    # 'hated' standing (reputation <= -15), just like their iron golems do in vanilla.
    #    >> Boolean:[ Valid_Values={ true, false }, Default=true ]
    B:villagers_defend=false
}


