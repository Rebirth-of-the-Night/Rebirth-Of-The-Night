# Configuration file

general {

    worktable_common {
        # If this is true, a player will be allowed to sneak + click using an
        # empty hand to remove all items from the worktable's crafting grid.
        # The removed items will be placed into the player's inventory or on top
        # of the worktable if the player's inventory is full.
        # Default: false
        B:ALLOW_RECIPE_CLEAR=false

        # If this is true, a player will be allowed to sneak + click using a
        # hammer to automatically place items from their inventory into the
        # worktable's crafting grid that match the ingredients for the last
        # recipe completed. The hammer will be damaged, see RECIPE_REPEAT_TOOL_DAMAGE.
        # Default: false
        B:ALLOW_RECIPE_REPEAT=false

        # Any recipe that you can complete in a vanilla crafting table can also
        # be completed in this mod's worktables.
        # 
        # If this list is not empty, recipes listed here will be disallowed.
        # 
        # The whitelist takes priority over the blacklist.
        # 
        # String format is a recipe resource location: (domain):(path) or (domain):*
        S:RECIPE_BLACKLIST <
         >

        # If ALLOW_RECIPE_REPEAT is enabled, this is the amount of damage that
        # will be applied to the hammer. Set to zero to disable.
        # Default: 1
        # Min: 0
        # Max: 2147483647
        I:RECIPE_REPEAT_TOOL_DAMAGE=1

        # Any recipe that you can complete in a vanilla crafting table can also
        # be completed in this mod's worktables.
        # 
        # If this list is not empty, only the recipes listed here will be allowed.
        # 
        # The whitelist takes priority over the blacklist.
        # 
        # String format is a recipe resource location: (domain):(path) or (domain):*
        S:RECIPE_WHITELIST <
         >
    }

    worktable {
        # The number of crafts that the worktable can perform before it breaks.
        # This is only relevant if the `USES_DURABILITY` flag is true.
        # Default: 64
        # Min: 1
        # Max: 2147483647
        I:DURABILITY=64

        # How much exhaustion to apply per completed craft.
        # Default: 0
        # Min: 0.0
        # Max: 40.0
        D:EXHAUSTION_COST_PER_CRAFT_COMPLETE=0.0

        # How much exhaustion to apply per hit.
        # Default: 1
        # Min: 0.0
        # Max: 40.0
        D:EXHAUSTION_COST_PER_HIT=1.0

        # The maximum stack size for each slot in the crafting grid.
        # Default: 1
        # Min: 1
        # Max: 64
        I:GRID_MAX_STACK_SIZE=1

        # The number of hammer hits required to complete a craft.
        # Default: 4
        # Min: 1
        # Max: 2147483647
        I:HITS_PER_CRAFT=4

        # Minimum amount of hunger the player needs to use.
        # Default: 3
        # Min: 0
        # Max: 20
        I:MINIMUM_HUNGER_TO_USE=3

        # The maximum stack size for each slot in the shelf.
        # Default: 1
        # Min: 1
        # Max: 64
        I:SHELF_MAX_STACK_SIZE=1

        # The amount of damage applied to the tool per craft.
        # Default: 2
        # Min: 0
        # Max: 2147483647
        I:TOOL_DAMAGE_PER_CRAFT=2

        # If true, the worktable has durability and will break after the configured
        # number of crafts completed.
        # Default: true
        B:USES_DURABILITY=false
    }

    stone_worktable {
        # The number of crafts that the worktable can perform before it breaks.
        # This is only relevant if the `USES_DURABILITY` flag is true.
        # Default: 512
        # Min: 1
        # Max: 2147483647
        I:DURABILITY=512

        # How much exhaustion to apply per completed craft.
        # Default: 0
        # Min: 0.0
        # Max: 40.0
        D:EXHAUSTION_COST_PER_CRAFT_COMPLETE=0.0

        # How much exhaustion to apply per hit.
        # Default: 0.5
        # Min: 0.0
        # Max: 40.0
        D:EXHAUSTION_COST_PER_HIT=0.5

        # The maximum stack size for each slot in the crafting grid.
        # Default: 1
        # Min: 1
        # Max: 64
        I:GRID_MAX_STACK_SIZE=32

        # The number of hammer hits required to complete a craft.
        # Default: 2
        # Min: 1
        # Max: 2147483647
        I:HITS_PER_CRAFT=2

        # Minimum amount of hunger the player needs to use.
        # Default: 3
        # Min: 0
        # Max: 20
        I:MINIMUM_HUNGER_TO_USE=3

        # The maximum stack size for each slot in the shelf.
        # Default: 64
        # Min: 1
        # Max: 64
        I:SHELF_MAX_STACK_SIZE=64

        # The amount of damage applied to the tool per craft.
        # Default: 1
        # Min: 0
        # Max: 2147483647
        I:TOOL_DAMAGE_PER_CRAFT=1

        # If true, the worktable has durability and will break after the configured
        # number of crafts completed.
        # Default: false
        B:USES_DURABILITY=false
    }

    compacting_bin {
        # Set this to false to prevent piping contents in / out.
        # Default: true
        B:ALLOW_AUTOMATION=true

        # How much exhaustion to apply per completed craft.
        # Default: 0
        # Min: 0.0
        # Max: 40.0
        D:EXHAUSTION_COST_PER_CRAFT_COMPLETE=0.0

        # How much exhaustion to apply per hit.
        # Default: 1
        # Min: 0.0
        # Max: 40.0
        D:EXHAUSTION_COST_PER_HIT=1.0

        # The item displayed to represent each harvest level in JEI.
        # The index into the array is the harvest level, the value at that index
        # is the displayed item. The array can be expanded as needed.
        # If the harvest level of the tool used exceeds the array length, the
        # last element in the array is used.
        # 
        # String format is a resource location: (domain):(path)
        S:JEI_HARVEST_LEVEL_ITEM <
            pyrotech:crude_shovel
            minecraft:stone_shovel
            minecraft:iron_shovel
            minecraft:diamond_shovel
         >

        # The number of output blocks the compacting bin can hold.
        # Default: 4
        # Min: 1
        # Max: 2147483647
        I:MAX_CAPACITY=8

        # Minimum amount of hunger the player needs to use.
        # Default: 3
        # Min: 0
        # Max: 20
        I:MINIMUM_HUNGER_TO_USE=3

        # Any item with a tool class of shovel is automatically valid.
        # Use this to remove items that you don't want to be valid.
        # 
        # The whitelist takes priority over the blacklist.
        # 
        # String format is a resource location: (domain):(path)
        S:SHOVEL_BLACKLIST <
         >

        # Any item with a tool class of shovel is automatically valid.
        # Use this to add items that you want to be valid that don't have the
        # shovel tool class. Items you add are assumed to have durability.
        # 
        # The whitelist takes priority over the blacklist.
        # 
        # String format is a resource location: (domain):(path)
        S:SHOVEL_WHITELIST <
         >

        # The amount of damage applied to the tool when a craft completes.
        # Default: 1
        I:TOOL_DAMAGE_PER_CRAFT=1

        # The number of uses required per harvest level of the tool used.
        # The index into the array is the harvest level, the value at that index
        # is the required number of uses. The array can be expanded as needed.
        # If the harvest level of the tool used exceeds the array length, the
        # last element in the array is used.
        # 
        # ie. {wood, stone, iron, diamond}
        # Valid values are in the range: [1,+int]
        # Default: {4, 3, 2, 1}
        I:TOOL_USES_REQUIRED_PER_HARVEST_LEVEL <
            4
            3
            2
            1
         >
    }

    soaking_pot {
        # Set this to false to prevent piping contents in / out.
        # Default: true
        B:ALLOW_AUTOMATION=true

        # Multiplicative modifier applied to every recipe in this device.
        # recipeDurationTicks = recipeDurationTicks * BASE_RECIPE_DURATION_MODIFIER
        # Default: 1
        # Min: 0.0
        # Max: 1.7976931348623157E308
        D:BASE_RECIPE_DURATION_MODIFIER=1

        # If false, the container will break when a hot fluid is placed inside,
        # and the fluid will spawn in the world where the tank was.
        # Default: true
        B:HOLDS_HOT_FLUIDS=true

        # The temperature that the container considers hot.
        # The temperature of lava is 1300 and water is 300
        # Default: 450
        # Min: -2147483648
        # Max: 2147483647
        I:HOT_TEMPERATURE=450

        # The maximum fluid capacity in millibuckets.
        # Default: 4000
        # Min: 1
        # Max: 2147483647
        I:MAX_FLUID_CAPACITY=8000

        # The maximum stack size that can be placed in the pot.
        # Default: 8
        # Min: 1
        # Max: 64
        I:MAX_STACK_SIZE=16
    }

    anvil_common {
        # These values are used to reduce the number of hits required to complete
        # a recipe.
        # 
        # The index into the array is the harvest level, the value at that index
        # is the hit reduction. The array can be expanded as needed.
        # If the harvest level of the tool used exceeds the array length, the
        # last element in the array is used.
        # 
        # ie. {wood, stone, iron, diamond}
        # Default: {0, 1, 2, 3}
        I:HIT_REDUCTION_PER_HAMMER_HARVEST_LEVEL <
            0
            1
            3
            6
            12
            20
            25
            30
            36
            102
         >

        # The pickaxe displayed to represent each harvest level in JEI.
        # The index into the array is the harvest level, the value at that index
        # is the displayed item. The array can be expanded as needed.
        # If the harvest level of the tool used exceeds the array length, the
        # last element in the array is used.
        # 
        # String format is a resource location: (domain):(path)
        S:JEI_HARVEST_LEVEL_PICKAXE <
            pyrotech:crude_pickaxe
            minecraft:stone_pickaxe
            minecraft:iron_pickaxe
            minecraft:diamond_pickaxe
         >

        # Use this to add items that you want to be invalid for pickaxe recipes.
        # Items you add are assumed to have durability.
        # 
        # String format is a resource location: (domain):(path)
        S:PICKAXE_BLACKLIST <
         >

        # Use this to add items that you want to be valid for pickaxe recipes.
        # Items you add are assumed to have durability.
        # 
        # String format is a resource location: (domain):(path)
        S:PICKAXE_WHITELIST <
         >
    }

    granite_anvil {
        # Set this to false to prevent piping contents in / out.
        # Default: true
        B:ALLOW_AUTOMATION=true

        # The chance that extra damage will be applied when hitting a bloom.
        # Default: 0.5
        # Min: 0.0
        # Max: 1.0
        D:BLOOM_EXTRA_DAMAGE_CHANCE=0.5

        # The amount of extra damage to apply to the anvil damage when hitting a bloom.
        # Default: 1
        # Min: 0
        # Max: 2147483647
        I:BLOOM_EXTRA_DAMAGE_PER_HIT=1

        # How much exhaustion to apply per completed craft.
        # Default: 0
        # Min: 0.0
        # Max: 40.0
        D:EXHAUSTION_COST_PER_CRAFT_COMPLETE=0.0

        # How much exhaustion to apply per hit.
        # Default: 0.5
        # Min: 0.0
        # Max: 40.0
        D:EXHAUSTION_COST_PER_HIT=0.1

        # The number of times the block can be hit before applying damage
        # to the block. The block has a total of four damage stages. This number
        # represents the number of hits for just one damage stage.
        # Default: 64
        # Min: 1
        # Max: 2147483647
        I:HITS_PER_DAMAGE=64

        # Minimum amount of hunger the player needs to use.
        # Default: 3
        # Min: 0
        # Max: 20
        I:MINIMUM_HUNGER_TO_USE=3

        # Set to false to prevent the device from wearing out.
        # Default: true
        B:USE_DURABILITY=true
    }

    ironclad_anvil {
        # Set this to false to prevent piping contents in / out.
        # Default: true
        B:ALLOW_AUTOMATION=true

        # The chance that extra damage will be applied when hitting a bloom.
        # Default: 0.05
        # Min: 0.0
        # Max: 1.0
        D:BLOOM_EXTRA_DAMAGE_CHANCE=0.05

        # The amount of extra damage to apply to the anvil damage when hitting a bloom.
        # Default: 1
        # Min: 0
        # Max: 2147483647
        I:BLOOM_EXTRA_DAMAGE_PER_HIT=1

        # How much exhaustion to apply per completed craft.
        # Default: 0
        # Min: 0.0
        # Max: 40.0
        D:EXHAUSTION_COST_PER_CRAFT_COMPLETE=0.0

        # How much exhaustion to apply per hit.
        # Default: 0.5
        # Min: 0.0
        # Max: 40.0
        D:EXHAUSTION_COST_PER_HIT=0.5

        # The number of times the block can be hit before applying damage
        # to the block. The block has a total of four damage stages. This number
        # represents the number of hits for just one damage stage.
        # Default: 256
        # Min: 1
        # Max: 2147483647
        I:HITS_PER_DAMAGE=4096

        # Multiplicative modifier applied to the required hits for all inherited recipes.
        # Default: 1.0
        # Min: 0.0
        # Max: 1.7976931348623157E308
        D:INHERITED_GRANITE_ANVIL_RECIPE_HIT_MODIFIER=0.5

        # If true, all the granite anvil recipes will also be available in this device.
        # Default: true
        B:INHERIT_GRANITE_ANVIL_RECIPES=true

        # Minimum amount of hunger the player needs to use.
        # Default: 3
        # Min: 0
        # Max: 20
        I:MINIMUM_HUNGER_TO_USE=1

        # Set to false to prevent the device from wearing out.
        # Default: true
        B:USE_DURABILITY=true
    }

    chopping_block {
        # Set this to false to prevent piping contents in / out.
        # Default: true
        B:ALLOW_AUTOMATION=true

        # Any item with a tool class of axe is automatically valid.
        # Use this to remove items that you don't want to be valid.
        # 
        # The whitelist takes priority over the blacklist.
        # 
        # String format is a resource location: (domain):(path)
        S:AXE_BLACKLIST <
         >

        # Any item with a tool class of axe is automatically valid.
        # Use this to add items that you want to be valid that don't have the
        # axe tool class. Items you add are assumed to have durability.
        # 
        # The whitelist takes priority over the blacklist.
        # 
        # String format is a resource location: (domain):(path)
        S:AXE_WHITELIST <
         >

        # The number of times the block can be chopped on before applying damage
        # to the block. The block has a total of six damage stages. This number
        # represents the number of chops for just one damage stage.
        # Default: 16
        # Min: 1
        # Max: 2147483647
        I:CHOPS_PER_DAMAGE=16

        # The number of chops required per harvest level of the axe used.
        # The index into the array is the harvest level, the value at that index
        # is the required number of chops. The array can be expanded as needed.
        # If the harvest level of the tool used exceeds the array length, the
        # last element in the array is used.
        # 
        # ie. {wood, stone, iron, diamond}
        # Valid values are in the range: [1,+int]
        # Default: {6, 4, 2, 2}
        I:CHOPS_REQUIRED_PER_HARVEST_LEVEL <
            12
            10
            6
            4
            2
            1
         >

        # How much exhaustion to apply per axe chop.
        # Default: 1.5
        # Min: 0.0
        # Max: 40.0
        D:EXHAUSTION_COST_PER_AXE_CHOP=1.0

        # How much exhaustion to apply per completed craft.
        # Default: 0
        # Min: 0.0
        # Max: 40.0
        D:EXHAUSTION_COST_PER_CRAFT_COMPLETE=0.0

        # How much exhaustion to apply per shovel scoop.
        # Default: 0.5
        # Min: 0.0
        # Max: 40.0
        D:EXHAUSTION_COST_PER_SHOVEL_SCOOP=0.2

        # The item displayed to represent each harvest level in JEI.
        # The index into the array is the harvest level, the value at that index
        # is the displayed item. The array can be expanded as needed.
        # If the harvest level of the tool used exceeds the array length, the
        # last element in the array is used.
        # 
        # String format is a resource location: (domain):(path)
        S:JEI_HARVEST_LEVEL_ITEM <
            pyrotech:crude_axe
            minecraft:stone_axe
            minecraft:iron_axe
            minecraft:diamond_axe
         >

        # Minimum amount of hunger the player needs to use.
        # Default: 3
        # Min: 0
        # Max: 20
        I:MINIMUM_HUNGER_TO_USE=3

        # The recipe result quantity given per harvest level of the axe used.
        # The index into the array is the harvest level, the value at that index
        # is the recipe result quantity. The array can be expanded as needed.
        # If the harvest level of the tool used exceeds the array length, the
        # last element in the array is used.
        # 
        # ie. {wood, stone, iron, diamond}
        # Valid values are in the range: [0,+int]
        # Default: {1, 2, 3, 4}
        I:RECIPE_RESULT_QUANTITY_PER_HARVEST_LEVEL <
            1
            2
            3
            4
            4
            5
         >

        # Set to false to prevent the device from wearing out.
        # Default: true
        B:USES_DURABILITY=true

        # The chance that a chop will spawn wood chips nearby.
        # Default: 0.05
        # Min: 0.0
        # Max: 1.0
        D:WOOD_CHIPS_CHANCE=0.08
    }

    crude_drying_rack {
        # Multiplicative modifier applied to every recipe in this device.
        # recipeDurationTicks = recipeDurationTicks * BASE_RECIPE_DURATION_MODIFIER
        # Default: 1
        # Min: 0.0
        # Max: 1.7976931348623157E308
        D:BASE_RECIPE_DURATION_MODIFIER=0.25

        # speed = speed * SPEED_MODIFIER
        # Default: 1.0
        # Min: 4.9E-324
        # Max: 1.7976931348623157E308
        D:SPEED_MODIFIER=1.1

        conditional_modifiers {
            # The base derived speed.
            # Default: 1
            D:BASE_DERIVED=1.0

            # Added to the base derived speed if it isn't raining, the device has a
            # direct line of sight to the sky, and it's daytime.
            # Default: 0.2
            D:DAYTIME=0.20000000298023224

            # Added to the base derived speed if the biome is cold.
            # Default: -0.2
            D:DERIVED_COLD=-0.20000000298023224

            # Added to the base derived speed if the biome is dry.
            # Default: 0.2
            D:DERIVED_DRY=0.5

            # Added to the base derived speed if the biome is hot.
            # Default: 0.2
            D:DERIVED_HOT=0.3

            # Added to the base derived speed if the biome is wet.
            # Default: -0.2
            D:DERIVED_WET=-0.3

            # The base speed if the device is being directly rained on.
            # Default: -1
            D:DIRECT_RAIN=-3.0

            # Added to the base derived speed for each fire source block in range.
            # Default: 0.2
            D:FIRE_SOURCE_BONUS=0.25

            # The device will gain a bonus for each fire source within this range.
            # Default: 2
            I:FIRE_SOURCE_BONUS_RANGE=3

            # The base speed if the it is raining, but not directly on the device, or
            # the biome has high humidity.
            # Default: 0.25
            D:INDIRECT_RAIN=-0.50

            # The base speed if the device is in the Nether.
            # Default: 2
            D:NETHER=2.0
        }

    }

    drying_rack {
        # Multiplicative modifier applied to every recipe in this device.
        # recipeDurationTicks = recipeDurationTicks * BASE_RECIPE_DURATION_MODIFIER
        # Default: 1
        # Min: 0.0
        # Max: 1.7976931348623157E308
        D:BASE_RECIPE_DURATION_MODIFIER=0.3

        # Set the up / down movement speed for climbing.
        # Default: 0.1
        D:CLIMB_SPEED=0.1

        # Multiplicative modifier applied to the duration of all inherited recipes.
        # Default: 1.0
        # Min: 0.0
        # Max: 1.7976931348623157E308
        D:INHERITED_CRUDE_DRYING_RACK_RECIPE_DURATION_MODIFIER=1.0

        # If true, all the crude drying rack recipes will also be available in this device.
        # Default: true
        B:INHERIT_CRUDE_DRYING_RACK_RECIPES=true

        # speed = speed * SPEED_MODIFIER
        # Default: 1.35
        # Min: 4.9E-324
        # Max: 1.7976931348623157E308
        D:SPEED_MODIFIER=2.30

        # Set to true to allow the player to climb the sides of drying racks.
        # Default: true
        B:USE_AS_LADDER=true

        conditional_modifiers {
            # The base derived speed.
            # Default: 1
            D:BASE_DERIVED=1.0

            # Added to the base derived speed if it isn't raining, the device has a
            # direct line of sight to the sky, and it's daytime.
            # Default: 0.2
            D:DAYTIME=0.20000000298023224

            # Added to the base derived speed if the biome is cold.
            # Default: -0.2
            D:DERIVED_COLD=-0.20000000298023224

            # Added to the base derived speed if the biome is dry.
            # Default: 0.2
            D:DERIVED_DRY=0.5

            # Added to the base derived speed if the biome is hot.
            # Default: 0.2
            D:DERIVED_HOT=0.4

            # Added to the base derived speed if the biome is wet.
            # Default: -0.2
            D:DERIVED_WET=-0.9

            # The base speed if the device is being directly rained on.
            # Default: -1
            D:DIRECT_RAIN=-10.0

            # Added to the base derived speed for each fire source block in range.
            # Default: 0.2
            D:FIRE_SOURCE_BONUS=0.25

            # The device will gain a bonus for each fire source within this range.
            # Default: 2
            I:FIRE_SOURCE_BONUS_RANGE=3

            # The base speed if the it is raining, but not directly on the device, or
            # the biome has high humidity.
            # Default: 0.25
            D:INDIRECT_RAIN=1

            # The base speed if the device is in the Nether.
            # Default: 2
            D:NETHER=4.0
        }

    }

    pit_kiln {
        # Multiplicative modifier applied to every recipe in this device.
        # recipeDurationTicks = recipeDurationTicks * BASE_RECIPE_DURATION_MODIFIER
        # Default: 1
        # Min: 0.0
        # Max: 1.7976931348623157E308
        D:BASE_RECIPE_DURATION_MODIFIER=0.9

        # The maximum stack size that can be placed in the pit kiln.
        # Default: 8
        # Min: 1
        # Max: 64
        I:MAX_STACK_SIZE=8

        # SPEED_SCALAR=(1-VARIABLE_SPEED_MODIFIER)PERCENTAGE_FULL+VARIABLE_SPEED_MODIFIER
        # 
        # If set to 0.5, the Pit Kiln will complete 1 item in 50% of the time.
        # For each item added after the first, the duration increases linearly
        # until it is 100% when full.
        # Setting the value to 0 is not recommended as it will cause one
        # item to complete instantly.
        # Default: 0.5
        # Min: 0.0
        # Max: 1.0
        D:VARIABLE_SPEED_MODIFIER=0.4
    }

    campfire {
        # Set this to false to prevent piping contents in / out.
        # Default: true
        B:ALLOW_AUTOMATION=true

        # The chance that the campfire will produce ash when a fuel is consumed.
        # Default: 0.25
        # Min: 0.0
        # Max: 1.0
        D:ASH_CHANCE=0.25

        # How many ticks does it take before the output food becomes burned food.
        # Default: 600
        # Min: 1
        # Max: 2147483647
        I:BURNED_FOOD_TICKS=600

        # The amount of ticks of burn time added to the campfire
        # for each log consumed.
        # Default: 2400
        # Min: 1
        # Max: 2147483647
        I:BURN_TIME_TICKS_PER_LOG=2400

        # How many ticks to cook food on the campfire.
        # Default: 1800
        # Min: 1
        # Max: 2147483647
        I:COOK_TIME_TICKS=1800

        # The amount of damage done to an entity when walking on top of a lit campfire.
        # Set to zero to disable.
        # Default: 1.0
        # Min: 0.0
        # Max: 1.7976931348623157E308
        D:ENTITY_WALK_BURN_DAMAGE=1.0

        # Set to true if the campfire should be extinguished by rain.
        # Default: true
        B:EXTINGUISHED_BY_RAIN=true

        # By default, the campfire will cook at a rate of 100% of the recipe's
        # specified value with 4 logs, a rate of 200% with 8 logs, and a rate of
        # 0% with 0 logs.
        # Keep in mind that an accelerated cooking speed will also reduce the
        # time required for your food to burn.
        # Default: 4
        # Min: 1
        # Max: 8
        I:FUEL_LEVEL_FOR_FULL_COOK_SPEED=4
        I:LIGHT_LEVEL=11

        # The light level of the campfire when lit with max fuel.
        # Default: 15
        # Min: 0
        # Max: 15
        I:MAXIMUM_LIGHT_LEVEL=11

        # The light level of the campfire when lit with no fuel.
        # Default: 3
        # Min: 0
        # Max: 15
        I:MINIMUM_LIGHT_LEVEL=3

        # The chance that the player will be damaged with fire when picking
        # up a log while the campfire is lit.
        # Default: 0.5
        # Min: 0.0
        # Max: 1.0
        D:PLAYER_BURN_CHANCE=0.5

        # The amount of damage done to a player when picking up a log while the
        # campfire is lit.
        # Default: 1.0
        # Min: 0.0
        # Max: 1.7976931348623157E308
        D:PLAYER_LOG_BURN_DAMAGE=1.0

        # The number of ticks that the campfire can be exposed to rain before
        # it is extinguished.
        # Default: 200
        # Min: 1
        # Max: 2147483647
        I:TICKS_BEFORE_EXTINGUISHED=200

        # If true, all 'logWood' items will be valid fuel for the campfire.
        # Default: true
        B:USE_LOG_WOOD_OREDICT=true
    }

    compost_bin {
        # A compost bin layer will compost faster for each actively composting
        # layer above it. By default a layer will be 20% faster for each layer
        # above it that is actively composting.
        # Default: 0.2
        D:ADDITIVE_PERCENTILE_SPEED_MODIFIER_PER_LAYER=0.2

        # Set this to false to prevent piping contents in / out.
        # Default: true
        B:ALLOW_AUTOMATION=true

        # Set this to false to prevent the mod from automatically creating
        # mulch recipes from food items.
        # Default: true
        B:AUTO_CREATE_RECIPES_FROM_FOOD=true

        # How long does the process take in ticks.
        # Default: 96000
        I:COMPOST_DURATION_TICKS=96000

        # The required compost value to complete one recipe.
        # Default: 16
        I:COMPOST_VALUE_REQUIRED_PER_OUTPUT_ITEM=16

        # The range of compost values used when generating values for food.
        # Default: [1, 8]
        I:GENERATED_FOOD_COMPOST_VALUE_RANGE <
            1
            8
         >

        # The maximum number of output items the device can hold.
        # This value also determines its maximum capacity.
        # Default: 16
        I:MAXIMUM_OUTPUT_ITEM_CAPACITY=16

        # The rate at which moisture will evaporate in mB / tick. The default
        # is 1 mB every 48 ticks and will last two full Minecraft day/night cycles.
        # Default: [1, 48]
        I:MOISTURE_EVAPORATION_RATE_MILLIBUCKETS_PER_TICK <
            1
            48
         >

        # Any item with a tool class of shovel is automatically valid.
        # Use this to remove items that you don't want to be valid.
        # 
        # The whitelist takes priority over the blacklist.
        # 
        # String format is a resource location: (domain):(path)
        S:SHOVEL_BLACKLIST <
         >

        # Any item with a tool class of shovel is automatically valid.
        # Use this to add items that you want to be valid that don't have the
        # shovel tool class. Items you add are assumed to have durability.
        # 
        # The whitelist takes priority over the blacklist.
        # 
        # String format is a resource location: (domain):(path)
        S:SHOVEL_WHITELIST <
         >

        # Set this to false to prevent displaying the compost value in tooltips.
        # Default: true
        B:SHOW_COMPOST_VALUE_IN_TOOLTIPS=true
    }

    campfire_marshmallows {
        # The amount of hunger healed by eating.
        # For reference, the vanilla apple restores 4 hunger.
        # Default: 1
        # Min: 0
        # Max: 2147483647
        I:BURNED_MARSHMALLOW_HUNGER=1

        # The amount of saturation healed by eating.
        # For reference, the vanilla apple restores 0.3 saturation.
        # Default: 0.01
        # Min: 0.0
        # Max: 1.7976931348623157E308
        D:BURNED_MARSHMALLOW_SATURATION=0.01

        # The duration of the marshmallow's slow effect in ticks.
        # Set to zero to disable.
        # Default: 100
        I:BURNED_MARSHMALLOW_SLOW_DURATION_TICKS=100

        # Set to false to disable the message broadcast to all players when a
        # player burns a marshmallow.
        # The message is located under the lang key:
        #   gui.pyrotech.marshmallow.burned.broadcast.message
        B:ENABLE_BURNED_MARSHMALLOW_BROADCAST_MESSAGE=true

        # Set to false to disable the message broadcast to all players when a
        # player eats a burned marshmallow.
        # The message is located under the lang key:
        #   gui.pyrotech.marshmallow.burned.eat.broadcast.message
        B:ENABLE_BURNED_MARSHMALLOW_EAT_BROADCAST_MESSAGE=true

        # The amount of hunger healed by eating.
        # For reference, the vanilla apple restores 4 hunger.
        # Default: 1
        # Min: 0
        # Max: 2147483647
        I:MARSHMALLOW_HUNGER=1

        # The amount of saturation healed by eating.
        # For reference, the vanilla apple restores 0.3 saturation.
        # Default: 0.05
        # Min: 0.0
        # Max: 1.7976931348623157E308
        D:MARSHMALLOW_SATURATION=0.05

        # The duration of the marshmallow's speed effect in ticks.
        # Set to zero to disable.
        # Default: 100
        I:MARSHMALLOW_SPEED_DURATION_TICKS=100

        # The number of times marshmallows can be roasted before the stick breaks.
        # Default: 8
        I:MARSHMALLOW_STICK_DURABILITY=8

        # The max duration of the marshmallow's stacked speed effect in ticks.
        # Set to zero to disable.
        # Default: 100
        I:MAX_MARSHMALLOW_SPEED_DURATION_TICKS=100

        # The max duration of the marshmallow's stacked speed effect in ticks.
        # Set to zero to disable.
        # Default: 6000
        I:MAX_ROASTED_MARSHMALLOW_SPEED_DURATION_TICKS=6000

        # How long before a roasted marshmallow loses potency. Potency affects
        # the duration of the treat's speed effect.
        # Default: 600
        # Min: 0
        # Max: 2147483647
        I:ROASTED_MARSHMALLOW_EFFECT_POTENCY_DURATION_TICKS=600

        # The amount of hunger healed by eating.
        # For reference, the vanilla apple restores 4 hunger.
        # Default: 2
        # Min: 0
        # Max: 2147483647
        I:ROASTED_MARSHMALLOW_HUNGER=2

        # The amount of saturation healed by eating.
        # For reference, the vanilla apple restores 0.3 saturation.
        # Default: 0.1
        # Min: 0.0
        # Max: 1.7976931348623157E308
        D:ROASTED_MARSHMALLOW_SATURATION=0.1

        # The duration of the marshmallow's speed effect in ticks.
        # Set to zero to disable.
        # Default: 500
        I:ROASTED_MARSHMALLOW_SPEED_DURATION_TICKS=500

        # How many ticks until a marshmallow is burned after it becomes roasted.
        # Default: 20
        # Min: 0
        # Max: 12000
        I:ROASTING_BURN_DURATION_TICKS=20

        # How many ticks until a marshmallow is roasted.
        # Default: 100
        # Min: 0
        # Max: 12000
        I:ROASTING_DURATION_TICKS=100

        # Percentage of random increase / decrease in roast duration per
        # marshmallow.
        # Default: 0.2
        # Min: 0.0
        # Max: 1.0
        D:ROASTING_DURATION_VARIANCE_PERCENTAGE=0.2

        # The maximum range in blocks at which a marshmallow roast will work.
        # Default: 2
        # Min: 0
        # Max: 2147483647
        I:ROASTING_RANGE_BLOCKS=2
    }

    campfire_effects {
        # When a player is within range of a campfire, they will
        # get the comfort effect.
        # Set to false to disable.
        # Default: true
        B:COMFORT_EFFECT_ENABLED=true

        # A percentile modifier for the amount of additional hunger restored
        # when a player eats food with the comfort effect.
        # Hunger restored = food hunger + food hunger * modifier
        # Default: 0.5
        # Min: 0.0
        # Max: 1.7976931348623157E308
        D:COMFORT_HUNGER_MODIFIER=0.5

        # A percentile modifier for the amount of additional saturation restored
        # when a player eats food with the comfort effect.
        # Saturation restored = food saturation + food saturation * modifier
        # Default: 0.5
        # Min: 0.0
        # Max: 1.7976931348623157E308
        D:COMFORT_SATURATION_MODIFIER=0.5

        # Set to true to enable debug messages.
        # Default: false
        B:DEBUG=false

        # The time of day that the campfire effects should start working.
        # If the current world time is larger than this value and less than
        # the stop value, the effects will work.
        # See: https://minecraft.gamepedia.com/Day-night_cycle#24-hour_Minecraft_day
        # Default: 12000
        # Min: 0
        # Max: 24000
        I:EFFECTS_START_TIME=12000

        # The time of day that the campfire effects should stop working.
        # If the current world time is less than this value and larger than
        # the start value, the effect will work.
        # See: https://minecraft.gamepedia.com/Day-night_cycle#24-hour_Minecraft_day
        # Default: 23000
        # Min: 0
        # Max: 24000
        I:EFFECTS_STOP_TIME=23000

        # This defines how much XP bonus is accumulated per cycle. This effect
        # cycles at the same rate as the Resting III effect.
        # Default: 0.05
        # Min: 0.0
        # Max: 1.7976931348623157E308
        D:FOCUSED_ACCUMULATED_BONUS=0.05

        # Additional XP granted by the XP bonus on collection. The default is
        # 100% additional XP, so effectively double the XP collected.
        # Default: 1
        # Min: 0.0
        # Max: 1.7976931348623157E308
        D:FOCUSED_BONUS=1.0

        # When a player stands still long enough with the Resting III effect,
        # the Well Rested effect, the Comfort effect, and the Well Fed effect,
        # they will gain the Focused effect. Set to false to disable.
        # Default: true
        B:FOCUSED_EFFECT_ENABLED=true

        # Maximum XP bonus that a player can accumulate.
        # Default: 1.5
        # Min: 0.0
        # Max: 1.7976931348623157E308
        D:FOCUSED_MAXIMUM_ACCUMULATED_BONUS=1.5

        # When a player is within range of a campfire, they will
        # get the resting effect.
        # Set to false to disable.
        # Default: true
        B:RESTING_EFFECT_ENABLED=true

        # The number of ticks before the resting effect levels up. The player
        # must stand still for the level up to occur.
        # Default: 200
        # Min: 1
        # Max: 2147483647
        I:RESTING_LEVEL_UP_INTERVAL_TICKS=200

        # The number of half-hearts regenerated per interval. For reference,
        # the vanilla regen effect will restore 1 half-heart every 50 ticks.
        # Set to zero to disable.
        # Default: 1
        # Min: 0
        # Max: 2147483647
        I:RESTING_REGEN_HALF_HEARTS=1

        # The number of ticks between the resting effect's health regen.
        # For reference, the vanilla regen effect has an interval of 50 ticks.
        # Default: 100
        # Min: 1
        # Max: 2147483647
        I:RESTING_REGEN_INTERVAL_TICKS=100

        # The duration of the Well Fed effect in ticks.
        # Default: 6000
        # Min: 0
        # Max: 2147483647
        I:WELL_FED_DURATION_TICKS=6000

        # When a player eats with full saturation while under the Comfort effect,
        # they will gain the Well Fed effect. Set to false to disable.
        # Default: true
        B:WELL_FED_EFFECT_ENABLED=true

        # Percentile exhaustion modifier for the Well Fed effect.
        # Default: 0.5
        # Min: 0.0
        # Max: 1.0
        D:WELL_FED_EXHAUSTION_MODIFIER=0.5

        # The number of half-hearts of absorption given. For reference,
        # the vanilla absorption effect grants 4 half-hearts.
        # Set to zero to disable.
        # Default: 4
        # Min: 0
        # Max: 2147483647
        I:WELL_RESTED_ABSORPTION_HALF_HEARTS=4

        # The duration of the Well Rested effect in ticks.
        # Default: 6000
        # Min: 0
        # Max: 2147483647
        I:WELL_RESTED_DURATION_TICKS=6000

        # When a player stands still long enough with the Resting III effect,
        # they will gain the Well Rested effect. Set to false to disable.
        # Default: true
        B:WELL_RESTED_EFFECT_ENABLED=true
    }

}


