# Configuration file

~CONFIG_VERSION: 1.4

"@Modules" {
    # CharmAutomation
    B:CharmAutomation=true

    # CharmBrewing
    B:CharmBrewing=false

    # CharmCrafting
    B:CharmCrafting=true

    # CharmEnchanting
    B:CharmEnchanting=true

    # CharmSmithing
    B:CharmSmithing=true

    # CharmTweaks
    B:CharmTweaks=true

    # CharmWorld
    B:CharmWorld=true
}


CharmAutomation {
    # A storage block for gunpowder.  Like Quark's sugar block, but dissolves in lava.
    B:GunpowderBlock=true

    # A block that acts like sand but is powered like a block of redstone.
    B:RedstoneSand=true

    # Block that emits light according to the strength of the input redstone signal.
    B:VariableRedstoneLamp=true
}


CharmBrewing {
    # Brew cocoa beans in water to make Coffee which gives you a helpful boost.
    B:Coffee=false

    # A nasty potion that withers living things.
    B:Decay=false

    # Brew an Eye of Ender with a Night Vision potion to make a Potion of Ender Sight.
    # Enderman are attracted to your location and you might hear a ringing sound coming from the direction of a stronghold.
    # 
    B:EnderSight=true

    # Right-click a Long Potion on a cake make a Flavored Cake that gives a potion effect after eating each slice.
    B:FlavoredCake=false

    # Allows Potion of Poison to be created from Mundane Potions and Poisonous Potatoes.
    B:PoisonousPotatoBrew=false

    Coffee {
        # Duration (in seconds) of Coffee effects. (default 10)
        I:"Coffee effect duration"=10
    }

    Decay {
        # Duration (in seconds) of decay effect when consumed. (default 5)
        I:"Decay duration"=5

        # Strength of the Wither effect that accompanies the decay effect. (default 2)
        I:"Wither strength"=2
    }

    EnderSight {
        # Invert the colours when under the effect of Ender Sight. (default true)
        B:"Client shader effect"=true

        # Duration (in seconds) of Ender Sight effect when consumed. (default 10)
        I:"Ender Sight duration"=10

        # Chance (out of 1.0) of an Enderman spawning close by when experiencing the Ender Sight effect. (default 0.05)
        D:"Enderman spawn chance"=0.05
    }

    FlavoredCake {
        # Duration multiplier of the potion effect when eating a single slice of cake. (default 0.5)
        D:"Effect duration multiplier"=0.5

        # List of Long Potions that can be used to make a cake.
        S:"Effect potion types" <
            swiftness
            strength
            leaping
            regeneration
            fire_resistance
            water_breathing
            invisibility
            night_vision
            quark:danger_sight
            quark:haste
            quark:resistance
            quark:resilience
         >
    }

}


CharmCrafting {
    # A compact storage solution borrowed lovingly from Minecraft 1.14.
    B:Barrel=false

    # A bookshelf with 9 slots that can store books.
    # Provides the same enchanting power as a normal bookshelf as long as there is at least 1 book on the shelf.
    B:BookshelfChest=false

    # Right-click the composter with organic items to add them.  When the composter is full, bonemeal will be returned.
    B:Composter=false

    # Offers a smaller storage solution with the benefit of being transportable.  Name your crate on an anvil to change the displayed label.
    # You can also seal the crate by combining it with an iron ingot - the only way to get things out is to break it.
    B:Crate=false

    # A storage block for ender pearls. Eating a chorus fruit will teleport you to a nearby ender pearl block.
    # If a silverfish burrows into an ender pearl block, it will become an endermite.
    B:EnderPearlBlock=true

    # An elegant lighting solution.  Comes in iron and gold.
    B:Lantern=true

    # A storage block for rotten flesh.  If the rotten flesh block has water on any of its sides, it has a chance to turn into dirt.
    # If there is a soil block above the rotten flesh block, it has a chance to turn into podzol.
    B:RottenFleshBlock=true

    # Smelt glowstone in a furnace to get smooth glowstone.
    B:SmoothGlowstone=true

    # Craft (or find) beetroot soup with a flower to make a suspicious soup.
    # Different flowers provide positive effects that are different for each world.
    # Be warned: these unstable concoctions might occasionally have negative side effects.
    B:SuspiciousSoup=false

    Barrel {
        # Charm's barrels will be enabled even if barrels from other mods are present. (default true)
        B:"Use Charm barrels"=false
    }

    BookshelfChest {
        # List of items that are allowed to be added to bookshelf chest.
        S:"Valid bookshelf items" <
            minecraft:book
            minecraft:enchanted_book
            minecraft:written_book
            minecraft:writable_book
            minecraft:knowledge_book
            quark:ancient_tome
            inspirations:books[*]
            forestry:catalogue
            forestry:book_forester
            aether_legacy:lore_book
            animania:animania_manual
            arcanearchives:tome_arcana
            betterwithmods:manual
            gbook_snapshot:guidebook
            villagenames:villagebook
            villagenames:mineshaftbook
            villagenames:jungletemplebook
            villagenames:desertpyramidbook
            villagenames:swamphutbook
            villagenames:igloobook
            villagenames:templebook
            villagenames:strongholdbook
            villagenames:monumentbook
            villagenames:mansionbook
            villagenames:fortressbook
            villagenames:endcitybook
            villagenames:moonvillagebook
            villagenames:koentusvillagebook
            villagenames:fronosvillagebook
            villagenames:nibiruvillagebook
            villagenames:abandonedbasebook
            rustic:book
         >
    }

    Composter {
        # These items have a 100% chance of adding a level of compost.
        S:"Items with 100% chance" <
            minecraft:cake
            minecraft:pumpkin_pie
            quark:reed_block
         >

        # These items have a 30% chance of adding a level of compost.
        S:"Items with 30% chance" <
            minecraft:beetroot_seeds
            minecraft:grass
            minecraft:leaves
            minecraft:leaves2
            minecraft:melon_seeds
            minecraft:pumpkin_seeds
            minecraft:sapling
            minecraft:wheat_seeds
            quark:leaf_carpet
            inspirations:enlightened_bush
            inspirations:cactus_seeds
            inspirations:sugar_cane_seeds
            inspirations:carrot_seeds
            inspirations:potato_seeds
         >

        # These items have a 50% chance of adding a level of compost.
        S:"Items with 50% chance" <
            minecraft:cactus
            minecraft:melon
            minecraft:reeds
            minecraft:double_plant
            minecraft:tallgrass
            quark:roots
            quark:roots_black_flower
            quark:roots_blue_flower
            quark:roots_white_flower
         >

        # These items have a 65% chance of adding a level of compost.
        S:"Items with 65% chance" <
            minecraft:apple
            minecraft:beetroot
            minecraft:carrot
            minecraft:dye[3]
            minecraft:tallgrass[2]
            minecraft:yellow_flower
            minecraft:red_flower
            minecraft:red_mushroom
            minecraft:brown_mushroom
            minecraft:potato
            minecraft:poisonous_potato
            minecraft:pumpkin
            minecraft:wheat
            quark:root_flower
            inspirations:flower
            inspirations:materials[4]
            inspirations:materials[5]
            inspirations:edibles[0]
         >

        # These items have a 85% chance of adding a level of compost.
        S:"Items with 85% chance" <
            minecraft:baked_potato
            minecraft:bread
            minecraft:cookie
            minecraft:hay_block
            minecraft:red_mushroom_block
            minecraft:brown_mushroom_block
            quark:turf
         >

        # Sets the maximum stack size of the composter output. (default 3)
        I:"Maximum number of output items"=3

        # Items that may be produced by the composter when it is full.
        S:"Output from composter" <
            minecraft:dye[15]
         >

        # Charm's composters will be enabled even if composters from other mods are present. (default false)
        B:"Use Charm composters"=false
    }

    Crate {
        # Shows tooltip containing crate contents when hovering over the crate in the inventory. (default true)
        B:"Crate tooltip"=true

        # Crate tooltip needs the shift key held down to be visible (default false)
        B:"Tooltip shift key"=false

        # Amount of XP (levels) required to use a name tag to seal a crate. (default 0)
        I:"XP cost"=0
    }

    EnderPearlBlock {
        # Chance (out of 1.0) of a silverfish burrowing into an Ender Pearl Block, creating an Endermite. (default 0.8)
        D:"Silverfish burrowing"=0.8

        # If true, eating a Chorus Fruit while in range of an Ender Pearl Block will teleport you to it. (default true)
        B:"Teleport stabilization"=true
    }

    Lantern {
        # Lantern will fall when the block under it is broken, or when the block above a hanging lantern is broken. (default true)
        B:"Lanterns obey gravity"=true

        # Number of lanterns output when crafting a lantern. (default 1)
        I:"Number of lanterns crafted"=1

        # Charm's lanterns will be enabled even if lanterns from other mods are present. (default false)
        B:"Use Charm lanterns"=false
    }

    SuspiciousSoup {
        # Add soup to mansions, igloos and village blacksmith loot. (default true)
        B:"Add to loot"=false

        # Amount of half-hearts of health restored by consuming any soup. (default 10)
        I:"Health restored"=10

        # Minimum duration (in seconds) of the effect(s) of the soup when consumed. (default 20)
        I:"Suspicious Soup duration"=20
    }

}


CharmEnchanting {
    # Combine the Curse Break enchanted book with a cursed item on an anvil to remove the curse.
    B:CurseBreak=true

    # Additional curses to ruin your day.
    # These curses can be given to player items when touched by a Spectre or being affected by the Decay potion.
    B:ExtraCurses=true

    # A hoe with the Homing enchantment is attracted to ore of the same ingots that make up the head of the hoe.
    # Right click underground.  If you hear a sound, you can follow it to the ore.
    B:Homing=false

    # Tools with the Magnetic enchantment automatically pick up drops.
    B:Magnetic=true

    # An item with the Salvage enchantment does not disappear when its durability is depleted, giving you a chance to get it repaired.
    # If the item runs out of durability the player will drop it and must be picked up again.  Watch out for lava.
    B:Salvage=false

    CurseBreak {
        # Amount of XP (levels) to remove a curse from an item (default 1)
        I:"XP cost"=3
    }

    ExtraCurses {
        # Chance (out of 1.0) that an item affected by Clumsiness fails to do its job. (default 0.12)
        D:"Clumsiness chance"=0.12

        # Chance (out of 1.0) that an item affected by Harming hurts the player. (default 0.12)
        D:"Harming chance"=0.12

        # Amount of damage (in half-hearts) dealt to the player when using an item affected by Harming. (default 1)
        I:"Harming damage"=3

        # List of mobs that can spawn when using an item affected by Haunting.
        S:"Haunting mobs" <
            charm:spectre
            charm:spectre
            charm:spectre
            minecraft:vex
            minecraft:vex
            minecraft:vex
            minecraft:vex
            minecraft:vex
            quark:wraith
            quark:wraith
            quark:wraith
            minecraft:endermite
            minecraft:endermite
            mod_lavacow:scarecrow
            netherex:ember
            netherex:ember
            rats:ratlantean_spirit
            aether_legacy:whirlwind
            aether_legacy:whirlwind
            aether_legacy:whirlwind
            twilightforest:wraith
            twilightforest:wraith
            twilightforest:wraith
            toroquest:toroquest_vampire_bat
            toroquest:toroquest_vampire_bat
         >

        # Chance (out of 1.0) that an item affected by Haunting causes a mob to spawn near the player. (default 0.12)
        D:"Haunting spawn chance"=0.1

        # Distance (in blocks) where a mob can spawn when using an item affected by Haunting. (default 8)
        I:"Haunting spawn range"=16

        # Maximum amount of durability damage given to an item affected by Rusting when the item is used. (default 12)
        I:"Rusting damage"=12
    }

}


CharmSmithing {
    # Combine an item with its golden version on an anvil to reduce the original item's repair cost.
    B:DecreaseRepairCost=false

    # Combine a Totem of Returning with a clock on an anvil to increase the number of times it can be used.
    B:ExtendTotemOfReturning=true

    # Combine an Enchanted Book with empty bottles on an anvil to get Bottles o' Enchanting.
    # The more levels and enchantments the book has, the more bottles are returned.
    B:ExtractBookXP=false

    # Extract enchantments from any enchanted item into an empty book.
    # The enchantments are weakened in the process, and the original item is destroyed.
    B:ExtractEnchantments=true

    # Tallow can be combined on an anvil with a tool or armor to give a small durability boost.
    # Repairing using tallow has a chance to increase future repair costs of the tool or armor.
    # NOTE: Quark must be installed for this feature to be enabled.
    B:TallowIncreasesDurability=true

    DecreaseRepairCost {
        # Amount that a golden item will decrease another item's repair cost. (default 2)
        I:"Decrease repair amount"=2

        # Amount of XP (levels) to use a golden item to decrease another item's repair cost. (default 0)
        I:"XP cost"=0
    }

    ExtendTotemOfReturning {
        # A map of items and the amount of uses they add to the totem.
        # Format is 'modid:name[meta]->uses'.  If meta is not set, or '*', all meta values of the item will be used.
        S:"Items and uses" <
            bountifulbaubles:potionrecall->2
         >

        # Amount of XP (levels) required to increase the number of times a Totem of Returning can be used. (default 5)
        I:"XP cost"=5
    }

    ExtractBookXP {
        # The minimum number of glass bottles needed when converting enchantments. (default 5)
        I:"Minimum required bottles"=5

        # Amount of XP (levels) to activate the conversion of enchantments into Bottles o' Enchanting. (default 0)
        I:"XP cost"=0
    }

    ExtractEnchantments {
        # The minimum XP cost before adding XP equivalent to the enchantment level(s) of the item. (default 1)
        I:"Base XP cost"=2

        # Number of levels that enchantments are weakened when converting. (default 1)
        I:"Weaken by amount"=1
    }

    TallowIncreasesDurability {
        # Percentage (out of 1.0) of the tool or armor repaired by a piece of tallow. (default 0.02)
        D:"Amount repaired"=0.03

        # Chance (out of 1.0) of tallow increasing the future repair cost of the tool. (default 0.05)
        D:"Chance of repair cost increase"=0.02

        # Amount of XP (levels) required to repair. (default 0)
        I:"XP cost"=0
    }

}


CharmTweaks {
    # Right click a cactus with an empty glass bottle for a chance to fill the bottle with water.
    B:CactusWater=true

    # Cauldrons can be used as a permanent water source when sneaking.
    B:CauldronWaterSource=false

    # Right-click on a beacon whilst sneaking to bind the compass to the beacon's location.
    # If Quark is enabled the compass tooltip will be the same color as the beacon's beam.
    B:CompassBinding=true

    # Changes the default dispenser recipe to allow damaged or enchanted bows.
    B:DispensersUseAnyBow=false

    # Adds records of all Minecraft background music.
    B:ExtraRecords=true

    # Increase the amount of nuggets returned when smelting iron and gold items with respect to their recipe and durability.
    B:FurnacesRecycleMore=false

    # Improves the base durability and efficiency of gold tools.
    B:GoldToolImprovements=false

    # Leather armor is invisible and does not increase mob awareness when drinking Potion of Invisibility.
    B:LeatherArmorInvisibility=false

    # Pickaxes break pistons (and sticky pistons) faster.
    B:PickaxesBreakPistons=false

    # Like Quark's random animal textures, this feature lets wolves and cats spawn with additional skin textures.
    B:RandomAnimalTextures=false

    # Stops the background music when playing a record in a jukebox to avoid a horrible cacophony.
    B:RecordsStopBackgroundMusic=false

    # Removes nitwits as spawnable villagers.
    B:RemoveNitwits=false

    # Limit furnace input slot to allow only items that have a smelting recipe.
    B:RestrictFurnaceInput=false

    # Using shears to break a melon has a chance to drop all 9 melon pieces.
    B:ShearedMelons=false

    # Landing on sponge absorbs some of the player's fall damage.
    B:SpongesReduceFallDamage=true

    # Enchanted Books can stack (up to 16).
    B:StackableEnchantedBooks=false

    # Milk buckets can stack (up to 16).
    B:StackableMilkBuckets=false

    # Potions and water bottles can stack (up to 16).
    B:StackablePotions=false

    # Tame animals will heal within the range of a beacon with regeneration effect.
    B:TamedAnimalsHealing=true

    # Tamed animals no longer take direct damage from players.
    # They still suffer secondary effects, such as burning from a Fire Aspect sword.
    B:TamedAnimalsNoDamage=true

    # As long as a Totem of Undying is in your inventory, it will be consumed to protect you from death.
    B:UseTotemFromInventory=false

    # Drink a bottle of water in a hot and dry biome to provide a regeneration boost.
    B:WaterInHotBiomes=true

    # Wearing a Witch Hat protects your items from being cursed when touched by a Spectre.
    # NOTE: Quark must be installed for this feature to be enabled.
    B:WitchHatProtection=true

    # A witch has a chance to drop a Potion of Decay when killed by a player.
    B:WitchesDropDecay=false

    # A witch has a chance to drop a Potion of Luck when killed by a player.
    B:WitchesDropLuck=true

    CompassBinding {
        # If true, adds co-ordinates and dimension to the bound compass tooltip. (default true)
        B:"Add compass information"=false

        # If true, compasses can bind to banners. (default false)
        B:"Use Banners"=true

        # If true, compasses can bind to active beacons. (default true)
        B:"Use Beacons"=true

        # If true, compasses can bind to beds. (default false)
        B:"Use Beds"=true
    }

    FurnacesRecycleMore {
        # Map of ingot items to their equivalent nugget items. Item recipes will be checked for these ingots.
        # Format is 'modid:inputname[meta]->modid:outputname[meta]->nuggetsPerIngot'.
        S:"Ingot to nugget conversion" <
            minecraft:iron_ingot->minecraft:iron_nugget->3
            minecraft:gold_ingot->minecraft:gold_nugget->3
         >

        # A map of items that return nuggets when smelted.
        # Format is 'modid:inputname(->modid:outputname->ingots)'. Bracketed statement optional, overrides the type and number of ingots in recipe.
        S:"Recyclable items" <
            minecraft:shears
            minecraft:clock
            minecraft:compass
            minecraft:minecart
            minecraft:hopper
            minecraft:cauldron
            minecraft:bucket
            minecraft:rail->minecraft:iron_ingot->1
            minecraft:detector_rail->minecraft:iron_ingot->1
            minecraft:activator_rail->minecraft:iron_ingot->1
            minecraft:golden_rail->minecraft:gold_ingot->1
            minecraft:iron_door->minecraft:iron_ingot->2
            minecraft:iron_bars->minecraft:iron_ingot->1
            minecraft:iron_trapdoor
            minecraft:iron_pickaxe
            minecraft:iron_axe
            minecraft:iron_hoe
            minecraft:iron_sword
            minecraft:iron_shovel
            minecraft:iron_helmet
            minecraft:iron_chestplate
            minecraft:iron_leggings
            minecraft:iron_boots
            minecraft:golden_pickaxe
            minecraft:golden_axe
            minecraft:golden_hoe
            minecraft:golden_sword
            minecraft:golden_shovel
            minecraft:golden_helmet
            minecraft:golden_chestplate
            minecraft:golden_leggings
            minecraft:golden_boots
            minecraft:golden_apple[0]
            minecraft:chainmail_helmet->minecraft:iron_ingot->5
            minecraft:chainmail_chestplate->minecraft:iron_ingot->8
            minecraft:chainmail_leggings->minecraft:iron_ingot->7
            minecraft:chainmail_boots->minecraft:iron_ingot->4
            minecraft:iron_horse_armor->minecraft:iron_ingot->8
            minecraft:golden_horse_armor->minecraft:gold_ingot->8
            charm:nether_gold_deposit->minecraft:gold_ingot->1
         >
    }

    GoldToolImprovements {
        # Default attack of gold tools. Vanilla is 0.0. (default 0.0)
        D:"Gold tool damage"=0.0

        # Default durability of gold tools. Vanilla is 32. (default 512)
        I:"Gold tool durability"=512

        # Default efficiency of gold tools. Vanilla is 12.0. (default 17.0)
        D:"Gold tool efficiency"=17.0

        # Default enchantability of gold tools. Vanilla is 22. (default 22)
        I:"Gold tool enchantability"=22

        # Default harvest level of gold tools. Vanilla is 0. (default 0)
        I:"Gold tool harvest level"=0
    }

    RandomAnimalTextures {
        # Textures to use when rendering Black cats (Cat Type 2).
        S:"Black cat textures" <
            minecraft:black
            charm:all_black
         >

        # Textures to use when rendering Ocelots.
        S:"Ocelot textures" <
            minecraft:ocelot
         >

        # Enable random textures depending on the cat type, borrowed lovingly from Minecraft 1.14. (default true)
        B:"Random cat textures"=true

        # Enable random wolf textures with brown, grey and black variants. (default true)
        B:"Random wolf textures"=true

        # Textures to use when rendering Red cats (Cat Type 1).
        S:"Red cat textures" <
            minecraft:red
            charm:persian
            charm:tabby
         >

        # Textures to use when rendering Siamese and other cats (Cat Type 3).
        S:"Siamese / other cat textures" <
            minecraft:siamese
            charm:calico
            charm:white
            charm:ragdoll
            charm:british_shorthair
            charm:jellie
         >

        # Textures to use when rendering wolves.
        S:"Wolf textures" <
            minecraft:wolf
            charm:brown
            charm:grey
            charm:black
         >
    }

    WitchesDropDecay {
        # Chance (out of 1.0) of a witch dropping a Potion of Decay when killed by the player. (default 0.2)
        D:"Drop chance"=0.2
    }

    WitchesDropLuck {
        # Chance (out of 1.0) of a witch dropping a Potion of Luck when killed by the player. (default 0.1)
        D:"Drop chance"=0.1
    }

}


CharmWorld {
    # Abandoned Crates may be found underground.  These crates are sealed so must be smashed to obtain contained items.
    B:AbandonedCrates=true

    # Right-click a bat with a bucket to capture it.
    # Right-click your Bat in a Bucket to release the bat and help locate entities around you.
    B:BatBucket=false

    # If you are holding an emerald and are struck by lightning, the emerald will become charged and you will take no damage.
    # Right-click a Charged Emerald to throw it, creating a lightning strike at the point of impact.
    B:ChargedEmeralds=false

    # Add Colored Runes in Stronghold End Portal frames. Two portals with the same runes will be linked together.
    B:EndPortalRunes=true

    # Endermite Powder has a chance of being dropped from an Endermite.
    # Use it in the End to help locate an End City.
    B:EndermitePowder=false

    # Illusioners are spell-casting illagers equipped with bows that create fake copies of themselves while fighting.
    # This feature lets illusioners spawn in Roofed Forest biomes.  An illusioner has a chance of dropping a totem.
    B:IllusionersInRoofedForest=true

    # The moonstone helps you locate a specific block co-ordinate or aid axis alignment across dimensions.
    B:Moonstone=false

    # Villages spawn in more biomes.  The type of biome determines what materials the village buildings are constructed from.
    B:MoreVillageBiomes=false

    # Gold deposits spawn in the Nether that can be broken to receive gold nuggets.
    B:NetherGoldDeposits=false

    # Spectres spawn in the darkness at quite a low depth, and are almost invisible to see.
    # When they touch the player they curse a weapon, tool or armor item and disappear.
    # They can be defeated by light and convert sand to soul sand on death.
    B:Spectre=true

    # Spectres will spawn in greater numbers within range of specific structure.
    B:SpectreHaunting=true

    # Cartographers sell Structure Maps that can be used to find overworld structures.
    B:StructureMaps=true

    # Swamp huts may generate with a filled cauldron, a chest of loot and a black cat.
    B:SwampHutDecorations=true

    # Right-click with a Totem of Returning to bind it to a location in the world.
    # The next time you use the totem, you will be returned to that location, destroying the totem in the process.
    B:TotemOfReturning=true

    # With the Totem of Shielding in your offhand (shield) slot, any damage you take is absorbed by the totem instead.
    B:TotemOfShielding=false

    # Improves village aesthetics with internal and external decoration.
    # Houses and huts are populated with functional and decorative blocks according to a career/profession.
    # Village area can have more trees, flowers, crops, mobs and lights.
    B:VillageDecorations=true

    # Villagers have additional trades.  Librarians can buy back enchanted books, tool smiths repair very damaged anvils for a small iron cost, and zombie flesh is more useful.
    B:VillagerTrades=true

    # Vindicators can be found wandering in Roofed Forest biomes.
    B:VindicatorsInRoofedForest=true

    AbandonedCrates {
        # Chance (out of 1.0) of a crate generating in a chunk, if it is possible to do so. (default 0.3)
        D:"Generate crate chance"=0.1

        # Crates will spawn higher than this Y value.
        # For Cubic Chunks you should set this value very low. (default 28)
        I:"Lower limit"=20

        # Crates will spawn lower than this Y value. (default 48)
        I:"Upper limit"=40
    }

    BatBucket {
        # Add the Bat in a Bucket to dungeon loot. (default true)
        B:"Add to loot"=true

        # Maximum time (in seconds) that the glowing effect will last. (default 10)
        I:"Maximum time"=10

        # Range (in blocks) in which entities will glow when the Bat in a Bucket is held. (default 24)
        I:"Viewing range"=24
    }

    EndermitePowder {
        # Chance (out of 1.0) of an endermite dropping Endermite Powder when killed by the player. (default 0.5)
        D:"Drop chance"=0.5
    }

    EndPortalRunes {
        # Eyes of Ender can be removed from End Portal frames by right-clicking when sneaking.
        # If false, right-clicking with a rune replaces the Eye of Ender without returning it to the player. (default true)
        B:"Allow Eyes of Ender removal"=false
    }

    IllusionersInRoofedForest {
        # Chance (out of 1.0) of an illusioner dropping items when killed. (default 1.0)
        D:"Drop chance"=0.5

        # The higher this value, the more illusioners will spawn. (default 30)
        I:"Spawn weight"=10
    }

    Moonstone {
        # If true, adds co-ordinates and dimension to the moonstone tooltip. (default true)
        B:"Add coordinates to tooltip"=true

        # If true, the moonstone will have the glow effect when player is standing on the origin X and Z co-ordinate. (default true)
        B:"Add glow effect on origin"=true

        # The item in the center of the moonstone recipe. (default minecraft:quartz)
        S:"Central recipe item"=minecraft:quartz
    }

    MoreVillageBiomes {
        # Cold biomes where villages are constructed from Taiga wood.
        S:"Cold biomes" <
            taiga
            mutated_taiga
            mutated_taiga_cold
            ice_flats
            mutated_ice_flats
         >

        # Desert biomes where villages are made from sandstone.
        S:"Desert biomes" <
            desert
            mutated_desert
         >

        # Jungle biomes where villages are constructed from Jungle wood.
        S:"Jungle biomes" <
            jungle
            mutated_jungle
         >

        # Plains biomes where villages are constructed from Oak wood.
        S:"Plains biomes" <
            plains
            mutated_plains
            swampland
            mutated_swampland
         >

        # Savanna biomes where villages are constructed from Acacia wood.
        S:"Savanna biomes" <
            savanna
            mutated_savanna
         >
    }

    Spectre {
        # If true, spectres will curse armor or items belonging to the player.
        # If false, spectres will apply a weakness effect. (default false)
        B:"Apply curse"=true

        # Light level at which a Spectre disappears. (default 8)
        I:"Despawn light level"=8

        # Maximum depth at which Spectres can spawn. (default 24)
        I:"Spawn depth"=24

        # The higher this value, the more Spectres will spawn. (default 100)
        I:"Spawn weight"=100
    }

    SpectreHaunting {
        # Only spawns a spectre for haunting if number of monster entities is lower than this number.
        # Vanilla minecraft is around 75. (default 80)
        I:"Check mobcap"=800

        # Chance (out of 1.0) of a spectre spawning every two seconds during a haunt.
        #  (default 0.25)
        D:"Spawn chance during haunt"=0.25

        # How long a spectre should live for, in seconds.
        # This affects all spectres, not just those spawned in the haunt. (default 20)
        I:"Spectre lifetime"=120

        # Name of structure that spectres will haunt. (default Stronghold)
        S:"Structure to haunt"=Stronghold
    }

    StructureMaps {
        # Maximum emerald cost of a biome-specific structure map. (default 22)
        I:"Biome-specific maximum cost"=22

        # Minimum emerald cost of a biome-specific structure map. (default 16)
        I:"Biome-specific minimum cost"=16

        # List of biome-specific structures that are available as map locations.
        S:"Biome-specific structures" <
            desert_pyramid
            igloo
            jungle_pyramid
            swamp_hut
         >

        # List of general structures that are available as map locations.
        S:"General structures" <
            mineshaft
            village
         >

        # Maximum emerald cost of a general structure map. (default 7)
        I:"General structures maximum cost"=7

        # Minimum emerald cost of a general structure map. (default 4)
        I:"General structures minimum cost"=4

        # The level at which a cartographer will be unlocked for trading structure maps. (default 3)
        I:"Trade level"=3
    }

    TotemOfReturning {
        # If Illusioners are enabled, add the totem as a possible drop. (default true)
        B:"Add as Illusioner drop"=false

        # Add the totem to mansions, mineshafts and nether fortress loot. (default true)
        B:"Add to loot"=false
    }

    TotemOfShielding {
        # If Illusioners are enabled, add the totem as a possible drop. (default true)
        B:"Add as Illusioner drop"=false

        # Add the totem to mansions, pyramids and jungle temple loot. (default true)
        B:"Add to loot"=false

        # The incoming player damage is multiplied by this amount before being transferred to the totem. (default 0.75)
        D:"Damage multiplier"=0.75

        # Maximum durability of the totem. (default 100)
        I:"Maximum Health"=100
    }

    VillageDecorations {
        # Armor Stands appear in village houses. (default true)
        B:"Armor Stands"=false

        # Chance (out of 1.0) of a village having barrels containing farming-related loot and composters scattered within its boundary. (default 0.6)
        D:"Barrels and composters outside"=0.6

        # Beds appear in village houses. (default true)
        B:Beds=true

        # Coloured rugs appear in village houses and on the top of the village well. (default true)
        B:Carpet=true

        # Chance (out of 1.0) of items and blocks considered 'common' to spawn. (default 0.9)
        D:"Common chance"=0.9

        # Chance (out of 1.0) of a village having tilled soil, crops and water wells within its boundary. (default 0.1)
        D:"Crops outside"=0.1

        # Decorative blocks appear in village houses, such as bookshelves, polished stone and planks. (default true)
        B:"Decorative Blocks"=true

        # Chance (out of 1.0) of a chunk within the village boundary spawning a barrel.
        # This is only valid if the 'Barrels outside' config option allows it. (default 0.7)
        D:"Extra barrels weight"=0.7

        # Chance (out of 1.0) of a chunk within the village boundary spawning a golem.
        # This is only valid if the 'Mobs outside' config option allows it. (default 0.1)
        D:"Extra golem weight"=0.3

        # Chance (out of 1.0) of a chunk allowing any kind of mob generation.
        # The greater the chance, the more likely a mob will be considered to spawn.
        # This is only valid is the 'Mobs outside' config option allows it. (default 0.75)
        D:"Extra mobs weight"=0.75

        # Chance (out of 1.0) of a chunk within the village boundary spawning some pumpkins.
        # This is only valid if the 'Pumpkins outside' config option allows it. (default 0.7)
        D:"Extra pumpkins weight"=0.7

        # Chance (out of 1.0) of a village having more flowers (up to 3 types chosen based on village seed) within its boundary. (default 0.9)
        D:"Flowers outside"=0.9

        # Functional / Interactive blocks appear in village houses, such as anvils, cauldrons and crafting tables. (default true)
        B:"Functional Blocks"=true

        # Item frames appear on the walls of village houses, with items specific to the house theme. (default true)
        B:"Item Frames"=true

        # Chance (out of 1.0) of a village having torches and lanterns scattered within its boundary. (default 0.8)
        D:"Lights outside"=1.0

        # Chance (out of 1.0) of a village having more dogs, cats and golems within its boundary.
        # If the village is in a snowy biome, this option lets snow golems spawn. (default 0.75)
        D:"Mobs outside"=0.5

        # Chance (out of 1.0) of a village having mushrooms spawn, including large mushrooms, within its boundary. (default 0.75)
        D:"Mushrooms outside"=0.2

        # Chance (out of 1.0) of a village having pumpkins (and rarely melons) scattered within its boundary. (default 0.6)
        D:"Pumpkins outside"=0.6

        # Chance (out of 1.0) of items and blocks considered 'rare' to spawn. (default 0.005)
        D:"Rare chance"=0.001

        # Chests, crates and barrels (if enabled) appear in village houses, with loot specific to the house theme. (default true)
        B:Storage=false

        # Torches appear in village houses and around fields to stop water freezing. (default true)
        B:Torches=true

        # If true, trees that spawn within the village boundary can have vines hanging from them.
        # This is only valid if the 'Trees outside' config option allows it.
        # NOTE: chance for trees to spawn with cocoa beans when vines are enabled. (default false)
        B:"Trees can have vines"=false

        # Chance (out of 1.0) of a village having different types of trees spawn within its boundary. (default 0.75)
        D:"Trees outside"=0.0

        # Chance (out of 1.0) of items and blocks considered 'uncommon' to spawn. (default 0.35)
        D:"Uncommon chance"=0.35

        # Chance (out of 1.0) of items and blocks considered 'valuable' to spawn. (default 0.05)
        D:"Valuable chance"=0.01

        # If true, vanilla tools can spawn in item frames and armor stands.
        # This is only valid if the 'Item frames' and 'Armor stands' config option allows it. (default true)
        B:"Vanilla tools in frames and stands"=true

        # Number of passes that the generator will erode structures in a zombie village chunk. (default 512)
        I:"Zombie village erosion damage"=512

        # If true, zombie villages have damaged and eroded buildings and structures. (default true)
        B:"Zombie villages are eroded"=true
    }

    VindicatorsInRoofedForest {
        # Chance (out of 1.0) of a vindicator spawning as Johnny. (default 0.05)
        D:"Chance for Johnny"=0.05

        # The higher this value, the more vindicators will spawn. (default 90)
        I:"Spawn weight"=90
    }

}


